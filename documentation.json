{
    "pipes": [],
    "interfaces": [
        {
            "name": "BreadcrumbItem",
            "id": "interface-BreadcrumbItem-1b632530ca726905e938dfeee8d4123ad0a4e83f45764ab36ed431e285bb0cf6f30d8715ca6e8f951afd712a57a17d6c1786a02403d5ff16231ff22958f8d933",
            "file": "src/app/shared/component/smart/component/breadcrumb-smart.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {Component} from \"@angular/core\";\nimport {Router} from \"@angular/router\";\nimport {MenuItem} from \"primeng/api\";\n\ninterface BreadcrumbItem extends Pick<MenuItem, \"label\" | \"routerLink\"> {\n}\n\n@Component({\n  selector: \"rw-breadcrumb-smart\",\n  template: \"<rw-breadcrumb-dump [items]='items' [home]='home'></rw-breadcrumb-dump>\"\n})\nexport class BreadcrumbSmartComponent {\n  items: MenuItem[];\n\n  home: MenuItem;\n\n  constructor(private readonly router: Router) {\n    this.items = this.getRouterUrl();\n    this.home = {icon: \"pi pi-home\", routerLink: \"/\"};\n  }\n\n  private getRouterUrl(): BreadcrumbItem[] {\n    const parts = this.getRouterUrlParts();\n    return parts\n      .map(part => part.split(\"#\")[0])\n      .map((part, index) => ({\n        label: this.getRouterLabel(part),\n        routerLink: this.getRouterLink(parts, index)\n      }));\n  }\n\n  private getRouterUrlParts(): string[] {\n    return this.router.url\n      .split(\"/\")\n      .filter((_, index) => index > 0);\n  }\n\n  private getRouterLabel(label: string): string {\n    return label.charAt(0).toUpperCase() + label.slice(1).toLowerCase();\n  }\n\n  private getRouterLink(parts: string[], index: number): string {\n    return \"/\".concat(parts.slice(0, index + 1).join(\"/\"));\n  }\n}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": [],
            "extends": [
                "Pick"
            ]
        },
        {
            "name": "DocsContentFormArgumentsModel",
            "id": "interface-DocsContentFormArgumentsModel-3e9db659e77e7a8b9bd5939a37dcc583e84b8bd93ecbbb910902a333b61569aaaa33e67bd1e852c3b6a03224d0ca831e7198bfa3595b365035eed28aa1507b8b",
            "file": "src/app/shared/component/form/docs-content-form/docs-content-form.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface DocsContentFormFirstLevelHeaderModel {\n  type: \"firstLevelHeader\";\n  value: string;\n  link: string;\n}\n\nexport interface DocsContentFormSecondLevelHeaderModel {\n  type: \"secondLevelHeader\";\n  value: string;\n  link: string;\n}\n\nexport interface DocsContentFormInfoModel {\n  type: \"info\";\n  value: string;\n}\n\nexport interface DocsContentFormParagraphModel {\n  type: \"paragraph\";\n  value: string;\n}\n\nexport interface DocsContentFormCommandModel {\n  type: \"command\";\n  value: string;\n}\n\nexport interface DocsContentFormArgumentsModel {\n  type: \"arguments\";\n  value: { argument: string, alias: string, description: string, require: boolean, value: string }[];\n}\n\nexport interface DocsContentFormNewlineModel {\n  type: \"newline\";\n}\n\nexport type DocsContentSectionModel =\n  | DocsContentFormFirstLevelHeaderModel\n  | DocsContentFormSecondLevelHeaderModel\n  | DocsContentFormInfoModel\n  | DocsContentFormParagraphModel\n  | DocsContentFormCommandModel\n  | DocsContentFormArgumentsModel\n  | DocsContentFormNewlineModel;\n\nexport interface DocsContentFormModel {\n  sections: DocsContentSectionModel[];\n}\n",
            "properties": [
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "optional": false,
                    "description": "",
                    "line": 30
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "DocsContentFormCommandModel",
            "id": "interface-DocsContentFormCommandModel-3e9db659e77e7a8b9bd5939a37dcc583e84b8bd93ecbbb910902a333b61569aaaa33e67bd1e852c3b6a03224d0ca831e7198bfa3595b365035eed28aa1507b8b",
            "file": "src/app/shared/component/form/docs-content-form/docs-content-form.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface DocsContentFormFirstLevelHeaderModel {\n  type: \"firstLevelHeader\";\n  value: string;\n  link: string;\n}\n\nexport interface DocsContentFormSecondLevelHeaderModel {\n  type: \"secondLevelHeader\";\n  value: string;\n  link: string;\n}\n\nexport interface DocsContentFormInfoModel {\n  type: \"info\";\n  value: string;\n}\n\nexport interface DocsContentFormParagraphModel {\n  type: \"paragraph\";\n  value: string;\n}\n\nexport interface DocsContentFormCommandModel {\n  type: \"command\";\n  value: string;\n}\n\nexport interface DocsContentFormArgumentsModel {\n  type: \"arguments\";\n  value: { argument: string, alias: string, description: string, require: boolean, value: string }[];\n}\n\nexport interface DocsContentFormNewlineModel {\n  type: \"newline\";\n}\n\nexport type DocsContentSectionModel =\n  | DocsContentFormFirstLevelHeaderModel\n  | DocsContentFormSecondLevelHeaderModel\n  | DocsContentFormInfoModel\n  | DocsContentFormParagraphModel\n  | DocsContentFormCommandModel\n  | DocsContentFormArgumentsModel\n  | DocsContentFormNewlineModel;\n\nexport interface DocsContentFormModel {\n  sections: DocsContentSectionModel[];\n}\n",
            "properties": [
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "DocsContentFormFirstLevelHeaderModel",
            "id": "interface-DocsContentFormFirstLevelHeaderModel-3e9db659e77e7a8b9bd5939a37dcc583e84b8bd93ecbbb910902a333b61569aaaa33e67bd1e852c3b6a03224d0ca831e7198bfa3595b365035eed28aa1507b8b",
            "file": "src/app/shared/component/form/docs-content-form/docs-content-form.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface DocsContentFormFirstLevelHeaderModel {\n  type: \"firstLevelHeader\";\n  value: string;\n  link: string;\n}\n\nexport interface DocsContentFormSecondLevelHeaderModel {\n  type: \"secondLevelHeader\";\n  value: string;\n  link: string;\n}\n\nexport interface DocsContentFormInfoModel {\n  type: \"info\";\n  value: string;\n}\n\nexport interface DocsContentFormParagraphModel {\n  type: \"paragraph\";\n  value: string;\n}\n\nexport interface DocsContentFormCommandModel {\n  type: \"command\";\n  value: string;\n}\n\nexport interface DocsContentFormArgumentsModel {\n  type: \"arguments\";\n  value: { argument: string, alias: string, description: string, require: boolean, value: string }[];\n}\n\nexport interface DocsContentFormNewlineModel {\n  type: \"newline\";\n}\n\nexport type DocsContentSectionModel =\n  | DocsContentFormFirstLevelHeaderModel\n  | DocsContentFormSecondLevelHeaderModel\n  | DocsContentFormInfoModel\n  | DocsContentFormParagraphModel\n  | DocsContentFormCommandModel\n  | DocsContentFormArgumentsModel\n  | DocsContentFormNewlineModel;\n\nexport interface DocsContentFormModel {\n  sections: DocsContentSectionModel[];\n}\n",
            "properties": [
                {
                    "name": "link",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "DocsContentFormInfoModel",
            "id": "interface-DocsContentFormInfoModel-3e9db659e77e7a8b9bd5939a37dcc583e84b8bd93ecbbb910902a333b61569aaaa33e67bd1e852c3b6a03224d0ca831e7198bfa3595b365035eed28aa1507b8b",
            "file": "src/app/shared/component/form/docs-content-form/docs-content-form.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface DocsContentFormFirstLevelHeaderModel {\n  type: \"firstLevelHeader\";\n  value: string;\n  link: string;\n}\n\nexport interface DocsContentFormSecondLevelHeaderModel {\n  type: \"secondLevelHeader\";\n  value: string;\n  link: string;\n}\n\nexport interface DocsContentFormInfoModel {\n  type: \"info\";\n  value: string;\n}\n\nexport interface DocsContentFormParagraphModel {\n  type: \"paragraph\";\n  value: string;\n}\n\nexport interface DocsContentFormCommandModel {\n  type: \"command\";\n  value: string;\n}\n\nexport interface DocsContentFormArgumentsModel {\n  type: \"arguments\";\n  value: { argument: string, alias: string, description: string, require: boolean, value: string }[];\n}\n\nexport interface DocsContentFormNewlineModel {\n  type: \"newline\";\n}\n\nexport type DocsContentSectionModel =\n  | DocsContentFormFirstLevelHeaderModel\n  | DocsContentFormSecondLevelHeaderModel\n  | DocsContentFormInfoModel\n  | DocsContentFormParagraphModel\n  | DocsContentFormCommandModel\n  | DocsContentFormArgumentsModel\n  | DocsContentFormNewlineModel;\n\nexport interface DocsContentFormModel {\n  sections: DocsContentSectionModel[];\n}\n",
            "properties": [
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "DocsContentFormModel",
            "id": "interface-DocsContentFormModel-3e9db659e77e7a8b9bd5939a37dcc583e84b8bd93ecbbb910902a333b61569aaaa33e67bd1e852c3b6a03224d0ca831e7198bfa3595b365035eed28aa1507b8b",
            "file": "src/app/shared/component/form/docs-content-form/docs-content-form.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface DocsContentFormFirstLevelHeaderModel {\n  type: \"firstLevelHeader\";\n  value: string;\n  link: string;\n}\n\nexport interface DocsContentFormSecondLevelHeaderModel {\n  type: \"secondLevelHeader\";\n  value: string;\n  link: string;\n}\n\nexport interface DocsContentFormInfoModel {\n  type: \"info\";\n  value: string;\n}\n\nexport interface DocsContentFormParagraphModel {\n  type: \"paragraph\";\n  value: string;\n}\n\nexport interface DocsContentFormCommandModel {\n  type: \"command\";\n  value: string;\n}\n\nexport interface DocsContentFormArgumentsModel {\n  type: \"arguments\";\n  value: { argument: string, alias: string, description: string, require: boolean, value: string }[];\n}\n\nexport interface DocsContentFormNewlineModel {\n  type: \"newline\";\n}\n\nexport type DocsContentSectionModel =\n  | DocsContentFormFirstLevelHeaderModel\n  | DocsContentFormSecondLevelHeaderModel\n  | DocsContentFormInfoModel\n  | DocsContentFormParagraphModel\n  | DocsContentFormCommandModel\n  | DocsContentFormArgumentsModel\n  | DocsContentFormNewlineModel;\n\nexport interface DocsContentFormModel {\n  sections: DocsContentSectionModel[];\n}\n",
            "properties": [
                {
                    "name": "sections",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DocsContentSectionModel[]",
                    "optional": false,
                    "description": "",
                    "line": 47
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "DocsContentFormNewlineModel",
            "id": "interface-DocsContentFormNewlineModel-3e9db659e77e7a8b9bd5939a37dcc583e84b8bd93ecbbb910902a333b61569aaaa33e67bd1e852c3b6a03224d0ca831e7198bfa3595b365035eed28aa1507b8b",
            "file": "src/app/shared/component/form/docs-content-form/docs-content-form.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface DocsContentFormFirstLevelHeaderModel {\n  type: \"firstLevelHeader\";\n  value: string;\n  link: string;\n}\n\nexport interface DocsContentFormSecondLevelHeaderModel {\n  type: \"secondLevelHeader\";\n  value: string;\n  link: string;\n}\n\nexport interface DocsContentFormInfoModel {\n  type: \"info\";\n  value: string;\n}\n\nexport interface DocsContentFormParagraphModel {\n  type: \"paragraph\";\n  value: string;\n}\n\nexport interface DocsContentFormCommandModel {\n  type: \"command\";\n  value: string;\n}\n\nexport interface DocsContentFormArgumentsModel {\n  type: \"arguments\";\n  value: { argument: string, alias: string, description: string, require: boolean, value: string }[];\n}\n\nexport interface DocsContentFormNewlineModel {\n  type: \"newline\";\n}\n\nexport type DocsContentSectionModel =\n  | DocsContentFormFirstLevelHeaderModel\n  | DocsContentFormSecondLevelHeaderModel\n  | DocsContentFormInfoModel\n  | DocsContentFormParagraphModel\n  | DocsContentFormCommandModel\n  | DocsContentFormArgumentsModel\n  | DocsContentFormNewlineModel;\n\nexport interface DocsContentFormModel {\n  sections: DocsContentSectionModel[];\n}\n",
            "properties": [
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "DocsContentFormParagraphModel",
            "id": "interface-DocsContentFormParagraphModel-3e9db659e77e7a8b9bd5939a37dcc583e84b8bd93ecbbb910902a333b61569aaaa33e67bd1e852c3b6a03224d0ca831e7198bfa3595b365035eed28aa1507b8b",
            "file": "src/app/shared/component/form/docs-content-form/docs-content-form.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface DocsContentFormFirstLevelHeaderModel {\n  type: \"firstLevelHeader\";\n  value: string;\n  link: string;\n}\n\nexport interface DocsContentFormSecondLevelHeaderModel {\n  type: \"secondLevelHeader\";\n  value: string;\n  link: string;\n}\n\nexport interface DocsContentFormInfoModel {\n  type: \"info\";\n  value: string;\n}\n\nexport interface DocsContentFormParagraphModel {\n  type: \"paragraph\";\n  value: string;\n}\n\nexport interface DocsContentFormCommandModel {\n  type: \"command\";\n  value: string;\n}\n\nexport interface DocsContentFormArgumentsModel {\n  type: \"arguments\";\n  value: { argument: string, alias: string, description: string, require: boolean, value: string }[];\n}\n\nexport interface DocsContentFormNewlineModel {\n  type: \"newline\";\n}\n\nexport type DocsContentSectionModel =\n  | DocsContentFormFirstLevelHeaderModel\n  | DocsContentFormSecondLevelHeaderModel\n  | DocsContentFormInfoModel\n  | DocsContentFormParagraphModel\n  | DocsContentFormCommandModel\n  | DocsContentFormArgumentsModel\n  | DocsContentFormNewlineModel;\n\nexport interface DocsContentFormModel {\n  sections: DocsContentSectionModel[];\n}\n",
            "properties": [
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "DocsContentFormSecondLevelHeaderModel",
            "id": "interface-DocsContentFormSecondLevelHeaderModel-3e9db659e77e7a8b9bd5939a37dcc583e84b8bd93ecbbb910902a333b61569aaaa33e67bd1e852c3b6a03224d0ca831e7198bfa3595b365035eed28aa1507b8b",
            "file": "src/app/shared/component/form/docs-content-form/docs-content-form.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface DocsContentFormFirstLevelHeaderModel {\n  type: \"firstLevelHeader\";\n  value: string;\n  link: string;\n}\n\nexport interface DocsContentFormSecondLevelHeaderModel {\n  type: \"secondLevelHeader\";\n  value: string;\n  link: string;\n}\n\nexport interface DocsContentFormInfoModel {\n  type: \"info\";\n  value: string;\n}\n\nexport interface DocsContentFormParagraphModel {\n  type: \"paragraph\";\n  value: string;\n}\n\nexport interface DocsContentFormCommandModel {\n  type: \"command\";\n  value: string;\n}\n\nexport interface DocsContentFormArgumentsModel {\n  type: \"arguments\";\n  value: { argument: string, alias: string, description: string, require: boolean, value: string }[];\n}\n\nexport interface DocsContentFormNewlineModel {\n  type: \"newline\";\n}\n\nexport type DocsContentSectionModel =\n  | DocsContentFormFirstLevelHeaderModel\n  | DocsContentFormSecondLevelHeaderModel\n  | DocsContentFormInfoModel\n  | DocsContentFormParagraphModel\n  | DocsContentFormCommandModel\n  | DocsContentFormArgumentsModel\n  | DocsContentFormNewlineModel;\n\nexport interface DocsContentFormModel {\n  sections: DocsContentSectionModel[];\n}\n",
            "properties": [
                {
                    "name": "link",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [
        {
            "name": "AsideNavService",
            "id": "injectable-AsideNavService-799f051c7402b68180f947a42362a7165cfbcd41f13d29638a2cfc9ad556aa558c1ef23af788afde2a3b2c9b090c1f4e3a948cf447eb3f79682320e7b054b605",
            "file": "src/app/shared/component/aside-nav/aside-nav.service.ts",
            "properties": [
                {
                    "name": "asideNavOptions$",
                    "defaultValue": "new BehaviorSubject<TreeNode[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport {BehaviorSubject} from \"rxjs\";\nimport {TreeNode} from \"primeng/api\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AsideNavService {\n  asideNavOptions$ = new BehaviorSubject<TreeNode[]>([]);\n}\n",
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "ApiComponent",
            "id": "component-ApiComponent-5523d62e5380957220426cd6bfb55509e1ec993079b683c45a6175b54738916bd812043fc6f42288f4782c3a781e1e66c1305ac5e0a589304df584532485939e",
            "file": "src/app/core/docs/api/api.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "repox-website-api",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./api.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, OnInit} from '@angular/core';\n\nimport {AsideNavService} from \"../../../shared/component/aside-nav/aside-nav.service\";\n\n@Component({\n  selector: 'repox-website-api',\n  templateUrl: './api.component.html',\n  styleUrl: './api.component.scss'\n})\nexport class ApiComponent implements OnInit {\n  constructor(private readonly asideNav: AsideNavService) {\n  }\n\n  ngOnInit() {\n    this.asideNav.asideNavOptions$.next([\n      {\n        key: \"0-0\",\n        label: \"Generate\",\n        data: \"/docs/api/generate\",\n        children: [\n          {key: \"0-0-1\", label: \"Workspace\", data: \"/docs/api/generate/workspace\"},\n        ]\n      },\n      {\n        key: \"0-1\",\n        label: \"Regenerate\",\n        data: \"/docs/api/regenerate\",\n        children: [\n          {key: \"0-1-1\", label: \"Workspace\", data: \"/docs/api/regenerate/workspace\"},\n        ]\n      }\n    ]);\n  }\n}\n",
            "styleUrl": "./api.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "asideNav",
                        "type": "AsideNavService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "asideNav",
                        "type": "AsideNavService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<router-outlet></router-outlet>\n"
        },
        {
            "name": "ApiHomeComponent",
            "id": "component-ApiHomeComponent-b6991401e7fa1c7c7ef34933f188fdb6499ac898cb595a4c60f8af7d3f7c5e06fa5650327a2ff2045811cbdc46698657d15b23a23caf46b0227762106bf419b5",
            "file": "src/app/core/docs/api/api-home/api-home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "repox-website-api-home",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./api-home.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "content",
                    "defaultValue": "{\n    // title: \"Api\",\n    sections: []\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DocsContentFormModel",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport {DocsContentFormModel} from \"@shared\";\n\n@Component({\n  selector: 'repox-website-api-home',\n  templateUrl: './api-home.component.html',\n  styleUrl: './api-home.component.scss'\n})\nexport class ApiHomeComponent {\n  content: DocsContentFormModel = {\n    // title: \"Api\",\n    sections: []\n  };\n}\n",
            "styleUrl": "./api-home.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<repox-website-docs-container [content]=\"content\"></repox-website-docs-container>\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-9ba7f24af973dc812beaf035835a816d0ce591be9211a356bb3a6a8caae97df5767a6244fc03808ae8a2f6e38ac5ff8b9851b3412d15ab3aa229c3512127613f",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component} from \"@angular/core\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<rw-main-nav-smart></rw-main-nav-smart>\n<router-outlet></router-outlet>\n"
        },
        {
            "name": "ArgumentsDumbComponent",
            "id": "component-ArgumentsDumbComponent-392ceec72a30858ec21aaf9839376ff808a5231b87017acdfb63e5cbabb5d62f1b81b438c36ead371bba11b5f4458825d02ff076b7eaa136b1d24351d0c1958f",
            "file": "src/app/shared/component/dumb/arguments-dumb/arguments-dumb.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "rw-arguments-dumb",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./arguments-dumb.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "value",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "literal type[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input} from \"@angular/core\";\n\n@Component({\n  selector: \"rw-arguments-dumb\",\n  templateUrl: \"./arguments-dumb.component.html\",\n  styleUrl: \"./arguments-dumb.component.scss\"\n})\nexport class ArgumentsDumbComponent {\n  @Input() value: {\n    argument: string,\n    alias: string,\n    description: string,\n    require: boolean,\n    value: string\n  }[] = [];\n}\n",
            "styleUrl": "./arguments-dumb.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p-table [value]=\"value\" styleClass=\"p-datatable-gridlines\" [tableStyle]=\"{ 'min-width': '100%' }\">\n  <ng-template pTemplate=\"header\">\n    <tr>\n      <th class=\"column-center\">Argument</th>\n      <th class=\"column-center\">Alias</th>\n      <th>Description</th>\n      <th class=\"column-center\">Required</th>\n      <th class=\"column-center\">Value</th>\n    </tr>\n  </ng-template>\n  <ng-template pTemplate=\"body\" let-value>\n    <tr>\n      <td class=\"column-center\">{{ value['argument'] }}</td>\n      <td class=\"column-center\">{{ value['alias'] }}</td>\n      <td>{{ value['description'] }}</td>\n      <td class=\"column-center\">\n        <i class=\"pi pi-check\" style=\"font-size: 1rem;\"></i>\n      </td>\n      <td class=\"column-center\">{{ value['value'] }}</td>\n    </tr>\n  </ng-template>\n</p-table>\n"
        },
        {
            "name": "ArgumentsSmartComponent",
            "id": "component-ArgumentsSmartComponent-e644f2183943d99ce916018f2f3e804ec14c6ee0a7b27d74b063aeb87ab6465a57bc033a04378e43e9ba40c1554e258a8906d4d91ce743f187ad8ffee1547153",
            "file": "src/app/shared/component/smart/component/arguments-smart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "rw-arguments-smart",
            "styleUrls": [],
            "styles": [],
            "template": "<rw-arguments-dumb [value]='value'></rw-arguments-dumb>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "value",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "literal type[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input} from \"@angular/core\";\n\n@Component({\n  selector: \"rw-arguments-smart\",\n  template: \"<rw-arguments-dumb [value]='value'></rw-arguments-dumb>\"\n})\nexport class ArgumentsSmartComponent {\n  @Input() value: {\n    argument: string,\n    alias: string,\n    description: string,\n    require: boolean,\n    value: string\n  }[] = [];\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "AsideNavComponent",
            "id": "component-AsideNavComponent-456629ed57101650c2c0295c076c4d4826a57dd2a5d563fac03563fc72328429eaec46c9f5207d608d59ea941121634a3ca35211a02b66049c1e55c4ed359ea5",
            "file": "src/app/shared/component/aside-nav/aside-nav.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "repox-website-aside-nav",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./aside-nav.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "options",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TreeNode[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "expandRecursive",
                    "args": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "isExpand",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "isExpand",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getOptions",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getTreeOptions",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'window:resize'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "onSelect",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "window:resize",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25
                }
            ],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, HostListener} from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {TreeNode} from \"primeng/api\";\n\nimport {AsideNavService} from \"./aside-nav.service\";\n\n@Component({\n  selector: 'repox-website-aside-nav',\n  templateUrl: './aside-nav.component.html',\n  styleUrl: './aside-nav.component.scss'\n})\nexport class AsideNavComponent {\n  options: TreeNode[] = [];\n\n  constructor(\n    private readonly asideNav: AsideNavService,\n    private readonly router: Router\n  ) {\n    this.asideNav.asideNavOptions$.subscribe(() => {\n      this.getOptions();\n    });\n  }\n\n  @HostListener(\"window:resize\")\n  getTreeOptions(): void {\n    this.getOptions();\n  }\n\n  onSelect(event: any) {\n    this.router.navigate([event.node.data]);\n    this.options.forEach((node) => this.expandRecursive(node, false));\n  }\n\n  private expandRecursive(node: TreeNode, isExpand: boolean) {\n    node.expanded = isExpand;\n    if (node.children) {\n      node.children.forEach((childNode) => {\n        this.expandRecursive(childNode, isExpand);\n      });\n    }\n  }\n\n  private getOptions(): void {\n    if (window.innerWidth > 768) {\n      this.options = this.asideNav.asideNavOptions$.getValue();\n      return;\n    }\n    this.options = [\n      {\n        key: \"0\",\n        label: \"Menu\",\n        children: this.asideNav.asideNavOptions$.getValue()\n      }\n    ];\n  }\n}\n",
            "styleUrl": "./aside-nav.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "asideNav",
                        "type": "AsideNavService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "asideNav",
                        "type": "AsideNavService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<p-tree\n  [value]=\"options\"\n  [selectionMode]=\"'single'\"\n  (onNodeSelect)=\"onSelect($event)\">\n</p-tree>\n"
        },
        {
            "name": "BlogComponent",
            "id": "component-BlogComponent-f3beffd61cc5985244b2453caebfb43a0aaf24f42fa62d94fcd0b21b71badf8f20e8e5fc78ef84c26f15cb20e34cc06d7eb09648d9724dd04b3dd65e8237a56a",
            "file": "src/app/core/blog/blog.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "repox-website-blog",
            "styleUrls": [
                "./blog.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./blog.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "\"blog\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component} from \"@angular/core\";\n\n@Component({\n  selector: \"repox-website-blog\",\n  templateUrl: \"./blog.component.html\",\n  styleUrls: [\"./blog.component.scss\"]\n})\nexport class BlogComponent {\n  title = \"blog\"\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./blog.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "{{title}}\n"
        },
        {
            "name": "BreadcrumbDumbComponent",
            "id": "component-BreadcrumbDumbComponent-dba69c8dad2984459b6cc42941faa9e551b090dbc2d7dddd1093978fb900cb85475f88816f5f0513644c0a2ce4089b1e8a8f4a6dae8ca4f8fa09bf23c3a8f161",
            "file": "src/app/shared/component/dumb/breadcrumb-dumb/breadcrumb-dumb.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "rw-breadcrumb-dump",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./breadcrumb-dumb.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "home",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "MenuItem",
                    "decorators": []
                },
                {
                    "name": "items",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "MenuItem[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input} from \"@angular/core\";\nimport {MenuItem} from \"primeng/api\";\n\n@Component({\n  selector: \"rw-breadcrumb-dump\",\n  templateUrl: \"./breadcrumb-dumb.component.html\",\n  styleUrl: \"./breadcrumb-dumb.component.scss\"\n})\nexport class BreadcrumbDumbComponent {\n  @Input()\n  items: MenuItem[] = [];\n\n  @Input()\n  home: MenuItem = {};\n}\n",
            "styleUrl": "./breadcrumb-dumb.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p-breadcrumb [model]=\"items\" [home]=\"home\"></p-breadcrumb>\n"
        },
        {
            "name": "BreadcrumbSmartComponent",
            "id": "component-BreadcrumbSmartComponent-1b632530ca726905e938dfeee8d4123ad0a4e83f45764ab36ed431e285bb0cf6f30d8715ca6e8f951afd712a57a17d6c1786a02403d5ff16231ff22958f8d933",
            "file": "src/app/shared/component/smart/component/breadcrumb-smart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "rw-breadcrumb-smart",
            "styleUrls": [],
            "styles": [],
            "template": "<rw-breadcrumb-dump [items]='items' [home]='home'></rw-breadcrumb-dump>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "home",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "getRouterLabel",
                    "args": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getRouterLink",
                    "args": [
                        {
                            "name": "parts",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "parts",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getRouterUrl",
                    "args": [],
                    "optional": false,
                    "returnType": "BreadcrumbItem[]",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getRouterUrlParts",
                    "args": [],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component} from \"@angular/core\";\nimport {Router} from \"@angular/router\";\nimport {MenuItem} from \"primeng/api\";\n\ninterface BreadcrumbItem extends Pick<MenuItem, \"label\" | \"routerLink\"> {\n}\n\n@Component({\n  selector: \"rw-breadcrumb-smart\",\n  template: \"<rw-breadcrumb-dump [items]='items' [home]='home'></rw-breadcrumb-dump>\"\n})\nexport class BreadcrumbSmartComponent {\n  items: MenuItem[];\n\n  home: MenuItem;\n\n  constructor(private readonly router: Router) {\n    this.items = this.getRouterUrl();\n    this.home = {icon: \"pi pi-home\", routerLink: \"/\"};\n  }\n\n  private getRouterUrl(): BreadcrumbItem[] {\n    const parts = this.getRouterUrlParts();\n    return parts\n      .map(part => part.split(\"#\")[0])\n      .map((part, index) => ({\n        label: this.getRouterLabel(part),\n        routerLink: this.getRouterLink(parts, index)\n      }));\n  }\n\n  private getRouterUrlParts(): string[] {\n    return this.router.url\n      .split(\"/\")\n      .filter((_, index) => index > 0);\n  }\n\n  private getRouterLabel(label: string): string {\n    return label.charAt(0).toUpperCase() + label.slice(1).toLowerCase();\n  }\n\n  private getRouterLink(parts: string[], index: number): string {\n    return \"/\".concat(parts.slice(0, index + 1).join(\"/\"));\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": []
        },
        {
            "name": "ChangelogComponent",
            "id": "component-ChangelogComponent-486ed77d603ca0b247be73ef2d4ada3be90b41b8f79853f574999b22ce4a18e7d542249821e53ed213b2abbb954762090c3577016c88b472ab34b94edf7eb2dd",
            "file": "src/app/core/docs/changelog/changelog.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "repox-website-changelog",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./changelog.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "\"changelog\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, OnInit} from '@angular/core';\n\nimport {AsideNavService} from \"../../../shared/component/aside-nav/aside-nav.service\";\n\n@Component({\n  selector: 'repox-website-changelog',\n  templateUrl: './changelog.component.html',\n  styleUrl: './changelog.component.scss'\n})\nexport class ChangelogComponent implements OnInit {\n  title = \"changelog\";\n\n  constructor(private readonly asideNav: AsideNavService) {\n  }\n\n  ngOnInit() {\n    this.asideNav.asideNavOptions$.next([\n      {key: \"0-0\", label: \"Changelog Option 0\"},\n      {key: \"0-1\", label: \"Changelog Option 1\"},\n      {key: \"0-2\", label: \"Changelog Option 2\"},\n      {key: \"0-3\", label: \"Changelog Option 3\"},\n      {key: \"0-4\", label: \"Changelog Option 4\"}\n    ]);\n  }\n}\n",
            "styleUrl": "./changelog.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "asideNav",
                        "type": "AsideNavService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "asideNav",
                        "type": "AsideNavService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "{{title}}\n"
        },
        {
            "name": "CommunityComponent",
            "id": "component-CommunityComponent-c7186412f220e6d4247230a15df4deb150a64b52b6f34c6dcc3e10aaa8e2081d944c2d9d45d43439c924d2401021eb3f39cb0979bce653a55cec9fae27d5d500",
            "file": "src/app/core/community/community.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "repox-website-community",
            "styleUrls": [
                "./community.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./community.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "\"community\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component} from \"@angular/core\";\n\n@Component({\n  selector: \"repox-website-community\",\n  templateUrl: \"./community.component.html\",\n  styleUrls: [\"./community.component.scss\"]\n})\nexport class CommunityComponent {\n  title = \"community\"\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./community.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "{{title}}\n"
        },
        {
            "name": "ConceptsComponent",
            "id": "component-ConceptsComponent-9b0104059facf59f3cc62c543014a9675e8fe73e0068e55a455df21f450f348c3e2cda73e9f81d52b3e8101fe2f21688ed0454442949ae9779072f862847eb90",
            "file": "src/app/core/docs/concepts/concepts.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "repox-website-concepts",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./concepts.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "\"concepts\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, OnInit} from '@angular/core';\n\nimport {AsideNavService} from \"../../../shared/component/aside-nav/aside-nav.service\";\n\n@Component({\n  selector: 'repox-website-concepts',\n  templateUrl: './concepts.component.html',\n  styleUrl: './concepts.component.scss'\n})\nexport class ConceptsComponent implements OnInit {\n  title = \"concepts\";\n\n  constructor(private readonly asideNav: AsideNavService) {\n  }\n\n  ngOnInit() {\n    this.asideNav.asideNavOptions$.next([\n      {key: \"0-0\", label: \"Concepts Option 0\"},\n      {key: \"0-1\", label: \"Concepts Option 1\"},\n      {key: \"0-2\", label: \"Concepts Option 2\"},\n      {key: \"0-3\", label: \"Concepts Option 3\"},\n      {key: \"0-4\", label: \"Concepts Option 4\"}\n    ]);\n  }\n}\n",
            "styleUrl": "./concepts.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "asideNav",
                        "type": "AsideNavService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "asideNav",
                        "type": "AsideNavService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "{{title}}\n"
        },
        {
            "name": "DocsComponent",
            "id": "component-DocsComponent-3d6cc2c02d3c500c244ace403974441a7e0146d5caaaefd8531895ac0319ed4b7fc8b430beb91d2bcaedaf39bcbb604610d0ed0b73d3147d7675a32d1fad3826",
            "file": "src/app/core/docs/docs.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "repox-website-docs",
            "styleUrls": [
                "./docs.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./docs.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "\"docs\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component} from \"@angular/core\";\n\n@Component({\n  selector: \"repox-website-docs\",\n  templateUrl: \"./docs.component.html\",\n  styleUrls: [\"./docs.component.scss\"]\n})\nexport class DocsComponent {\n  title = \"docs\"\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@media screen and (min-width: 768px) {\n  .docs {\n    display: flex;\n    min-height: calc(100svh - 65px);\n\n    &__nav {\n      width: 250px;\n    }\n\n    &__content {\n      flex: 1;\n    }\n  }\n}\n",
                    "styleUrl": "./docs.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<section class=\"docs\">\n  <div class=\"docs__nav\">\n    <repox-website-aside-nav></repox-website-aside-nav>\n  </div>\n  <div class=\"docs__content\">\n    <router-outlet></router-outlet>\n  </div>\n</section>\n"
        },
        {
            "name": "DocsContainerComponent",
            "id": "component-DocsContainerComponent-52005df285648038be23efd0ceac38bf26b6554de30acd52df31ea25e5a45cc41b7e993152e750da2d86071e804d4fb6d2eff2c9c6df2303162231aafe89bef9",
            "file": "src/app/shared/component/docs-container/docs-container.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "repox-website-docs-container",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./docs-container.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "DocsContentFormModel | undefined",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input} from '@angular/core';\nimport {DocsContentFormModel} from \"@shared\";\n\n\n@Component({\n  selector: 'repox-website-docs-container',\n  templateUrl: './docs-container.component.html',\n  styleUrl: './docs-container.component.scss'\n})\nexport class DocsContainerComponent {\n  @Input() content: DocsContentFormModel | undefined;\n}\n",
            "styleUrl": "./docs-container.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<rw-breadcrumb-smart></rw-breadcrumb-smart>\n<rw-docs-content-form [content]=\"content\"></rw-docs-content-form>\n"
        },
        {
            "name": "DocsContentFormComponent",
            "id": "component-DocsContentFormComponent-7520071f9ce0d98a452fba9cb84e9df254810230b1b6b19f14b62282e442eb40b42600b3810eceb38b2ee8a194dfa2b8e137a8510fa51a7a14eb91cabc6a3695",
            "file": "src/app/shared/component/form/docs-content-form/docs-content-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "rw-docs-content-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./docs-content-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "DocsContentFormModel | undefined",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input} from '@angular/core';\n\nimport {DocsContentFormModel} from \"./docs-content-form.model\";\n\n@Component({\n  selector: \"rw-docs-content-form\",\n  templateUrl: \"./docs-content-form.component.html\",\n  styleUrl: \"./docs-content-form.component.scss\"\n})\nexport class DocsContentFormComponent {\n  @Input() content: DocsContentFormModel | undefined;\n}\n",
            "styleUrl": "./docs-content-form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<section class=\"docs-content-form\">\n  <div class=\"docs-content-form__content\">\n    <ng-container *ngFor=\"let section of content?.sections\">\n      <!-- Header h1 -->\n      <ng-container *ngIf=\"section.type === 'firstLevelHeader'\">\n        <rw-header-smart [headerType]=\"'h1'\" [headerValue]=\"section.value\" [headerLink]=\"section.link\"></rw-header-smart>\n      </ng-container>\n      <!-- Header h2 -->\n      <ng-container *ngIf=\"section.type === 'secondLevelHeader'\">\n        <rw-header-smart [headerType]=\"'h2'\" [headerValue]=\"section.value\" [headerLink]=\"section.link\"></rw-header-smart>\n      </ng-container>\n      <!-- Paragraph p -->\n      <ng-container *ngIf=\"section.type === 'paragraph'\">\n        <rw-paragraph-smart [value]=\"section.value\"></rw-paragraph-smart>\n      </ng-container>\n      <!-- Command code -->\n      <ng-container *ngIf=\"section.type === 'command'\">\n        <rw-terminal-smart [content]=\"section.value\"></rw-terminal-smart>\n      </ng-container>\n      <!-- Newline -->\n      <ng-container *ngIf=\"section.type === 'newline'\">\n        <div class=\"docs-content-form__newline\"></div>\n      </ng-container>\n      <!-- Array -->\n      <ng-container *ngIf=\"section.type === 'arguments'\">\n        <rw-arguments-smart [value]=\"section.value\"></rw-arguments-smart>\n      </ng-container>\n      <!-- Info -->\n      <ng-container *ngIf=\"section.type === 'info'\">\n        <rw-info-message-smart [messages]=\"[section.value]\"></rw-info-message-smart>\n      </ng-container>\n    </ng-container>\n  </div>\n</section>\n"
        },
        {
            "name": "ExtensionComponent",
            "id": "component-ExtensionComponent-640830dd6b9d561daf3a1f8d44bdc1bf52b0542cf3341c0ca6bebb830d016b2566cbbb995598d4c1746e7d51607fb5f446d6c9b29b793bd53cb02a107dfc8b85",
            "file": "src/app/core/docs/extension/extension.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "repox-website-extension",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./extension.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "\"extension\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, OnInit} from '@angular/core';\n\nimport {AsideNavService} from \"../../../shared/component/aside-nav/aside-nav.service\";\n\n@Component({\n  selector: 'repox-website-extension',\n  templateUrl: './extension.component.html',\n  styleUrl: './extension.component.scss'\n})\nexport class ExtensionComponent implements OnInit {\n  title = \"extension\";\n\n  constructor(private readonly asideNav: AsideNavService) {\n  }\n\n  ngOnInit() {\n    this.asideNav.asideNavOptions$.next([\n      {key: \"0-0\", label: \"Extension Option 0\"},\n      {key: \"0-1\", label: \"Extension Option 1\"},\n      {key: \"0-2\", label: \"Extension Option 2\"},\n      {key: \"0-3\", label: \"Extension Option 3\"},\n      {key: \"0-4\", label: \"Extension Option 4\"}\n    ]);\n  }\n}\n",
            "styleUrl": "./extension.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "asideNav",
                        "type": "AsideNavService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "asideNav",
                        "type": "AsideNavService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "{{title}}\n"
        },
        {
            "name": "FeaturesComponent",
            "id": "component-FeaturesComponent-554a7977160397dafaab06e7e78d83039a38b9a14cf300c8a86f808c8de1646e3a167afcf2c1bbed63e50516fe93d279de0c1bf84bcf70fe3efd99e1a4d748f1",
            "file": "src/app/core/docs/features/features.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "repox-website-features",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./features.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "\"features\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, OnInit} from '@angular/core';\n\nimport {AsideNavService} from \"../../../shared/component/aside-nav/aside-nav.service\";\n\n@Component({\n  selector: 'repox-website-features',\n  templateUrl: './features.component.html',\n  styleUrl: './features.component.scss'\n})\nexport class FeaturesComponent implements OnInit {\n  title = \"features\";\n\n  constructor(private readonly asideNav: AsideNavService) {\n  }\n\n  ngOnInit() {\n    this.asideNav.asideNavOptions$.next([\n      {key: \"0-0\", label: \"Features Option 0\"},\n      {key: \"0-1\", label: \"Features Option 1\"},\n      {key: \"0-2\", label: \"Features Option 2\"},\n      {key: \"0-3\", label: \"Features Option 3\"},\n      {key: \"0-4\", label: \"Features Option 4\"}\n    ]);\n  }\n}\n",
            "styleUrl": "./features.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "asideNav",
                        "type": "AsideNavService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "asideNav",
                        "type": "AsideNavService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "{{title}}\n"
        },
        {
            "name": "GenerateComponent",
            "id": "component-GenerateComponent-dff7fe2de1783bc322b3e20184b3b2f9ece13a2f46dde8c9b6d43b15f32630840bc7976bdb915d9df7ce52d775dc1161aa7a4210f625a638b8fd071419927a9c",
            "file": "src/app/core/docs/api/generate/component/generate.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "rw-generate",
            "styleUrls": [],
            "styles": [],
            "template": "<router-outlet></router-outlet>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component} from \"@angular/core\";\n\n@Component({\n  selector: \"rw-generate\",\n  template: \"<router-outlet></router-outlet>\"\n})\nexport class GenerateComponent {\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "GenerateIntroductionComponent",
            "id": "component-GenerateIntroductionComponent-2496e461755f812af5edaf8482606b7b8142c5545c86cf873f86fd6a6748c5e6ebefb203a3d9e92eab6fa33884170b9b4c08ca6abe60f1507feb5d61811626e3",
            "file": "src/app/core/docs/api/generate/component/generate-introduction.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "rw-generate-introduction",
            "styleUrls": [],
            "styles": [],
            "template": "<repox-website-docs-container [content]='content'></repox-website-docs-container>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "content",
                    "defaultValue": "{\n    sections: [\n      {\n        type: \"firstLevelHeader\",\n        value: \"Generate\",\n        link: \"generate\"\n      },\n      {\n        type: \"newline\"\n      },\n      {\n        type: \"paragraph\",\n        value: \"Welcome to the Workspace Generation section of the Repox documentation! In this section, we'll \" +\n          \"explore how Repox simplifies the management of monorepo projects by streamlining the process of creating \" +\n          \"and organizing workspaces. A monorepo project, as the name suggests, consolidates multiple projects \" +\n          \"within a single Git repository, facilitating efficient collaboration and code sharing among teams. \" +\n          \"Repox takes inspiration from tools like NX (www.nx.dev) and enhances the monorepo experience with \" +\n          \"its unique features and intuitive workflows.\"\n      },\n      {\n        type: \"newline\"\n      },\n      {\n        type: \"paragraph\",\n        value: \"Creating a workspace with Repox is a breeze. Whether you're starting a new project or \" +\n          \"transitioning an existing one to a monorepo structure, Repox provides powerful commands and configurations \" +\n          \"to set up your workspace quickly and effortlessly. With Repox, you can define project dependencies, \" +\n          \"manage shared configurations, and orchestrate builds and tests across your entire monorepo with ease. \" +\n          \"By centralizing your projects within a single repository, Repox enables seamless integration and \" +\n          \"dependency management, fostering a cohesive development environment.\"\n      },\n      {\n        type: \"newline\"\n      },\n      {\n        type: \"paragraph\",\n        value: \"In this section, we'll delve into the details of workspace generation with Repox, covering essential \" +\n          \"concepts, commands, and best practices. From initializing a new workspace to configuring project settings \" +\n          \"and managing dependencies, you'll find comprehensive guidance to kickstart your monorepo journey with Repox. \" +\n          \"Whether you're a seasoned developer seeking to optimize project organization or a team embarking on a \" +\n          \"collaborative coding adventure, Repox empowers you to harness the full potential of monorepo development. \" +\n          \"Let's dive in and unlock the efficiency and scalability of monorepo projects with Repox!\"\n      }\n    ]\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DocsContentFormModel",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component} from \"@angular/core\";\n\nimport {DocsContentFormModel} from \"@shared\";\n\n@Component({\n  selector: \"rw-generate-introduction\",\n  template: \"<repox-website-docs-container [content]='content'></repox-website-docs-container>\"\n})\nexport class GenerateIntroductionComponent {\n  content: DocsContentFormModel = {\n    sections: [\n      {\n        type: \"firstLevelHeader\",\n        value: \"Generate\",\n        link: \"generate\"\n      },\n      {\n        type: \"newline\"\n      },\n      {\n        type: \"paragraph\",\n        value: \"Welcome to the Workspace Generation section of the Repox documentation! In this section, we'll \" +\n          \"explore how Repox simplifies the management of monorepo projects by streamlining the process of creating \" +\n          \"and organizing workspaces. A monorepo project, as the name suggests, consolidates multiple projects \" +\n          \"within a single Git repository, facilitating efficient collaboration and code sharing among teams. \" +\n          \"Repox takes inspiration from tools like NX (www.nx.dev) and enhances the monorepo experience with \" +\n          \"its unique features and intuitive workflows.\"\n      },\n      {\n        type: \"newline\"\n      },\n      {\n        type: \"paragraph\",\n        value: \"Creating a workspace with Repox is a breeze. Whether you're starting a new project or \" +\n          \"transitioning an existing one to a monorepo structure, Repox provides powerful commands and configurations \" +\n          \"to set up your workspace quickly and effortlessly. With Repox, you can define project dependencies, \" +\n          \"manage shared configurations, and orchestrate builds and tests across your entire monorepo with ease. \" +\n          \"By centralizing your projects within a single repository, Repox enables seamless integration and \" +\n          \"dependency management, fostering a cohesive development environment.\"\n      },\n      {\n        type: \"newline\"\n      },\n      {\n        type: \"paragraph\",\n        value: \"In this section, we'll delve into the details of workspace generation with Repox, covering essential \" +\n          \"concepts, commands, and best practices. From initializing a new workspace to configuring project settings \" +\n          \"and managing dependencies, you'll find comprehensive guidance to kickstart your monorepo journey with Repox. \" +\n          \"Whether you're a seasoned developer seeking to optimize project organization or a team embarking on a \" +\n          \"collaborative coding adventure, Repox empowers you to harness the full potential of monorepo development. \" +\n          \"Let's dive in and unlock the efficiency and scalability of monorepo projects with Repox!\"\n      }\n    ]\n  };\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "GenerateWorkspaceComponent",
            "id": "component-GenerateWorkspaceComponent-e980a17207e5c1dde9da2f11f6cecb4dd772aa53efd9ff22139c73e15f2c224437ac7ce3dda9215e95a0305803aacd1753f5abac5a8971f1be3573e70cb1a17c",
            "file": "src/app/core/docs/api/generate/component/generate-workspace.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "rw-generate-workspace",
            "styleUrls": [],
            "styles": [],
            "template": "<repox-website-docs-container [content]='content'></repox-website-docs-container>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "content",
                    "defaultValue": "{\n    sections: [\n      {\n        type: \"firstLevelHeader\",\n        value: \"Generate Workspace\",\n        link: \"generate-workspace\"\n      },\n      {\n        type: \"newline\"\n      },\n      {\n        type: \"secondLevelHeader\",\n        value: \"Description\",\n        link: \"description\"\n      },\n      {\n        type: \"paragraph\",\n        value: \"The workspace generation section of Repox facilitates the creation of monorepo environments for \" +\n          \"efficient project management. Users can initiate workspace generation with a simple command, \" +\n          \"specifying project configurations and dependencies. Repox automates the setup process, creating a \" +\n          \"unified workspace where multiple projects reside within a single Git repository. This streamlines \" +\n          \"development workflows, allowing teams to manage dependencies, share code, and enforce consistent \" +\n          \"standards seamlessly. With Repox, generating and maintaining monorepo workspaces becomes a \" +\n          \"straightforward task, enhancing collaboration and productivity across the development lifecycle.\"\n      },\n      {\n        type: \"newline\"\n      },\n      {\n        type: \"secondLevelHeader\",\n        value: \"Syntax\",\n        link: \"syntax\"\n      },\n      {\n        type: \"command\",\n        value: \"repox generate workspace [options]\"\n      },\n      {\n        type: \"newline\"\n      },\n      {\n        type: \"secondLevelHeader\",\n        value: \"Program arguments\",\n        link: \"program-arguments\"\n      },\n      {\n        type: \"info\",\n        value: \"No arguments\"\n      },\n      {\n        type: \"newline\"\n      },\n      {\n        type: \"secondLevelHeader\",\n        value: \"Command arguments\",\n        link: \"command-arguments\"\n      },\n      {\n        type: \"arguments\",\n        value: [\n          {\n            argument: \"name\",\n            alias: \"n\",\n            description: \"The name of the workspace.\",\n            require: true,\n            value: \"string\"\n          }\n        ]\n      },\n      {\n        type: \"newline\"\n      },\n      {\n        type: \"secondLevelHeader\",\n        value: \"Example\",\n        link: \"example\"\n      },\n      {\n        type: \"command\",\n        value: \"repox generate workspace --name=my-workspace\"\n      }\n    ]\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DocsContentFormModel",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component} from \"@angular/core\";\n\nimport {DocsContentFormModel} from \"@shared\";\n\n@Component({\n  selector: \"rw-generate-workspace\",\n  template: \"<repox-website-docs-container [content]='content'></repox-website-docs-container>\"\n})\nexport class GenerateWorkspaceComponent {\n  content: DocsContentFormModel = {\n    sections: [\n      {\n        type: \"firstLevelHeader\",\n        value: \"Generate Workspace\",\n        link: \"generate-workspace\"\n      },\n      {\n        type: \"newline\"\n      },\n      {\n        type: \"secondLevelHeader\",\n        value: \"Description\",\n        link: \"description\"\n      },\n      {\n        type: \"paragraph\",\n        value: \"The workspace generation section of Repox facilitates the creation of monorepo environments for \" +\n          \"efficient project management. Users can initiate workspace generation with a simple command, \" +\n          \"specifying project configurations and dependencies. Repox automates the setup process, creating a \" +\n          \"unified workspace where multiple projects reside within a single Git repository. This streamlines \" +\n          \"development workflows, allowing teams to manage dependencies, share code, and enforce consistent \" +\n          \"standards seamlessly. With Repox, generating and maintaining monorepo workspaces becomes a \" +\n          \"straightforward task, enhancing collaboration and productivity across the development lifecycle.\"\n      },\n      {\n        type: \"newline\"\n      },\n      {\n        type: \"secondLevelHeader\",\n        value: \"Syntax\",\n        link: \"syntax\"\n      },\n      {\n        type: \"command\",\n        value: \"repox generate workspace [options]\"\n      },\n      {\n        type: \"newline\"\n      },\n      {\n        type: \"secondLevelHeader\",\n        value: \"Program arguments\",\n        link: \"program-arguments\"\n      },\n      {\n        type: \"info\",\n        value: \"No arguments\"\n      },\n      {\n        type: \"newline\"\n      },\n      {\n        type: \"secondLevelHeader\",\n        value: \"Command arguments\",\n        link: \"command-arguments\"\n      },\n      {\n        type: \"arguments\",\n        value: [\n          {\n            argument: \"name\",\n            alias: \"n\",\n            description: \"The name of the workspace.\",\n            require: true,\n            value: \"string\"\n          }\n        ]\n      },\n      {\n        type: \"newline\"\n      },\n      {\n        type: \"secondLevelHeader\",\n        value: \"Example\",\n        link: \"example\"\n      },\n      {\n        type: \"command\",\n        value: \"repox generate workspace --name=my-workspace\"\n      }\n    ]\n  };\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "GettingStartedComponent",
            "id": "component-GettingStartedComponent-2970f10c80f2dab4dfcabfd374ff2245bfef0b7fdddfe68792169205581b0132df10e776b042f989f7ddcbbb3b41a02f8c9f1c1dcbe0e9a74fbeef500f46a02d",
            "file": "src/app/core/docs/getting-started/getting-started.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "repox-website-getting-started",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./getting-started.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "\"getting-started\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, OnInit} from '@angular/core';\n\nimport {AsideNavService} from \"../../../shared/component/aside-nav/aside-nav.service\";\n\n@Component({\n  selector: 'repox-website-getting-started',\n  templateUrl: './getting-started.component.html',\n  styleUrl: './getting-started.component.scss'\n})\nexport class GettingStartedComponent implements OnInit {\n  title = \"getting-started\";\n\n  constructor(private readonly asideNav: AsideNavService) {\n  }\n\n  ngOnInit() {\n    this.asideNav.asideNavOptions$.next([\n      {key: \"0-0\", label: \"GettingStarted Option 0\"},\n      {key: \"0-1\", label: \"GettingStarted Option 1\"},\n      {key: \"0-2\", label: \"GettingStarted Option 2\"},\n      {key: \"0-3\", label: \"GettingStarted Option 3\"},\n      {key: \"0-4\", label: \"GettingStarted Option 4\"}\n    ]);\n  }\n}\n",
            "styleUrl": "./getting-started.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "asideNav",
                        "type": "AsideNavService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "asideNav",
                        "type": "AsideNavService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "{{title}}\n"
        },
        {
            "name": "HeaderDumbComponent",
            "id": "component-HeaderDumbComponent-933b86113cfd67f06d46bd6317750a9991caf8b425afdbfe814f8cc0d3b382ebf4741a26ad18351a609e629da6018b000aa9eccbd4eef0968bab131e18682dd1",
            "file": "src/app/shared/component/dumb/header-dumb/header-dumb.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "rw-header-dumb",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./header-dumb.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "headerLink",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "headerType",
                    "defaultValue": "\"h1\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "\"h1\" | \"h2\"",
                    "decorators": []
                },
                {
                    "name": "headerValue",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "isHovered",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "event",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, EventEmitter, Input, Output} from \"@angular/core\";\n\n@Component({\n  selector: \"rw-header-dumb\",\n  templateUrl: \"./header-dumb.component.html\",\n  styleUrl: \"./header-dumb.component.scss\"\n})\nexport class HeaderDumbComponent {\n  @Input()\n  headerType: \"h1\" | \"h2\" = \"h1\";\n\n  @Input()\n  headerValue: string = \"\";\n\n  @Input()\n  headerLink: string = \"\";\n\n  @Input()\n  isHovered: boolean = false;\n\n  @Output()\n  event = new EventEmitter();\n\n  onClick() {\n    this.event.emit();\n  }\n}\n",
            "styleUrl": "./header-dumb.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"header\" [id]=\"headerLink\">\n  <ng-container [ngSwitch]=\"headerType\">\n    <h1 *ngSwitchCase=\"'h1'\">{{ headerValue }}</h1>\n    <h2 *ngSwitchCase=\"'h2'\">{{ headerValue }}</h2>\n  </ng-container>\n  <span\n    class=\"pi pi-link header__link\"\n    [ngClass]=\"{ header__hidden: !isHovered }\"\n    (click)=\"onClick()\"></span>\n</div>\n"
        },
        {
            "name": "HeaderSmartComponent",
            "id": "component-HeaderSmartComponent-20d8706a47d512242bcee21ecdaa436a1caff12f31b4e38cd44f908887281039f00bc864026b2ff2ca9fe95a2800be8997e991e6a547f80fbf8458de6ee70916",
            "file": "src/app/shared/component/smart/component/header-smart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "rw-header-smart",
            "styleUrls": [],
            "styles": [],
            "template": "<rw-header-dumb    [headerType]='headerType'\n    [headerValue]='headerValue'\n    [headerLink]='headerLink'\n    [isHovered]=\"isHovered\"\n    (event)=\"onClick()\"\n  ></rw-header-dumb>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "headerLink",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "headerType",
                    "defaultValue": "\"h1\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "\"h1\" | \"h2\"",
                    "decorators": []
                },
                {
                    "name": "headerValue",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isHovered",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "methodsClass": [
                {
                    "name": "goToFragmentInstant",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onMouseEnter",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'mouseenter'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "onMouseLeave",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'mouseleave'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "mouseenter",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31
                },
                {
                    "name": "mouseleave",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36
                }
            ],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, HostListener, Input} from \"@angular/core\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\n\n@Component({\n  selector: \"rw-header-smart\",\n  template: `<rw-header-dumb\n    [headerType]='headerType'\n    [headerValue]='headerValue'\n    [headerLink]='headerLink'\n    [isHovered]=\"isHovered\"\n    (event)=\"onClick()\"\n  ></rw-header-dumb>`\n})\nexport class HeaderSmartComponent {\n  @Input()\n  headerType: \"h1\" | \"h2\" = \"h1\";\n\n  @Input()\n  headerValue: string = \"\";\n\n  @Input()\n  headerLink: string = \"\";\n\n  isHovered: boolean = false;\n\n  constructor(private router: Router, private route: ActivatedRoute) {\n    setTimeout(() => this.goToFragmentInstant(), 1);\n  }\n\n  @HostListener(\"mouseenter\")\n  onMouseEnter() {\n    this.isHovered = true;\n  }\n\n  @HostListener(\"mouseleave\")\n  onMouseLeave() {\n    this.isHovered = false;\n  }\n\n  onClick() {\n    this.router.navigate([], {fragment: this.headerLink, relativeTo: this.route});\n    this.goToFragmentInstant();\n  }\n\n  private goToFragmentInstant() {\n    const currentFragment = this.router.url.split(\"#\")[1];\n    const element = document.getElementById(currentFragment);\n    if (element) {\n      element.scrollIntoView({behavior: \"smooth\"});\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": []
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-1e2bbf75be1d79a23bf575afc1bfb92470588d0ad9cd2429bbe352d27ae46da7f522a97683c0cb088c6f82fa4aae82108d8a0ada3380a514d2385673470c7e95",
            "file": "src/app/core/home/home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "repox-website-home",
            "styleUrls": [
                "./home.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./home.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "\"home\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component} from \"@angular/core\";\n\n@Component({\n  selector: \"repox-website-home\",\n  templateUrl: \"./home.component.html\",\n  styleUrls: [\"./home.component.scss\"]\n})\nexport class HomeComponent {\n  title = \"home\"\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./home.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "{{title}}\n"
        },
        {
            "name": "InfoMessageDumbComponent",
            "id": "component-InfoMessageDumbComponent-089b5bc753b28014a921972b5386f872d306e8f670da90294a352019e11dd20fcea300ded3d98750b472fa90c9e3a23e7a7d2e4e061046b552b21a3b2a0d7d5d",
            "file": "src/app/shared/component/dumb/info-message-dumb/info-message-dumb.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "rw-info-message-dumb",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./info-message-dumb.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "messages",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "Message[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input} from \"@angular/core\";\nimport {Message} from \"primeng/api\";\n\n@Component({\n  selector: \"rw-info-message-dumb\",\n  templateUrl: \"./info-message-dumb.component.html\",\n  styleUrl: \"./info-message-dumb.component.scss\"\n})\nexport class InfoMessageDumbComponent {\n  @Input()\n  messages: Message[] = [];\n}\n",
            "styleUrl": "./info-message-dumb.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p-messages\n  [(value)]=\"messages\"\n  [showTransitionOptions]=\"'0ms'\"\n  [hideTransitionOptions]=\"'0ms'\"\n  [enableService]=\"false\"\n  [closable]=\"false\"\n></p-messages>\n"
        },
        {
            "name": "InfoMessageSmartComponent",
            "id": "component-InfoMessageSmartComponent-74ba69f4db52437dbd06f1d88fe49b4b167a5e4873b7862499f94f98b2e8f909150edef091c4a4082b9847573de336a1aad4fc841592a064ac2eaa8649acfb84",
            "file": "src/app/shared/component/smart/component/info-message-smart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "rw-info-message-smart",
            "styleUrls": [],
            "styles": [],
            "template": "<rw-info-message-dumb [messages]='buildMessages()'></rw-info-message-dumb>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "messages",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "buildMessages",
                    "args": [],
                    "optional": false,
                    "returnType": "Message[]",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input} from \"@angular/core\";\nimport {Message} from \"primeng/api\";\n\n@Component({\n  selector: \"rw-info-message-smart\",\n  template: \"<rw-info-message-dumb [messages]='buildMessages()'></rw-info-message-dumb>\"\n})\nexport class InfoMessageSmartComponent {\n  @Input()\n  messages: string[] = [];\n\n  buildMessages(): Message[] {\n    return this.messages.map(message => ({ severity: \"info\", detail: message }))\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "MainNavDumbComponent",
            "id": "component-MainNavDumbComponent-f265dab009a93700761eb39b8dc0185b69936306621c7ffc7884044d8f7174ad79d9cbd71f90888d2f5cd90b8699825cb3227501b123ea8f6299921d5f036f5e",
            "file": "src/app/shared/component/dumb/main-nav-dumb/main-nav-dumb.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "rw-main-nav-dumb",
            "styleUrls": [
                "./main-nav-dumb.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./main-nav-dumb.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "menuItems",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "MenuItem[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input} from \"@angular/core\";\nimport {MenuItem} from \"primeng/api\";\n\n@Component({\n  selector: \"rw-main-nav-dumb\",\n  templateUrl: \"./main-nav-dumb.component.html\",\n  styleUrls: [\"./main-nav-dumb.component.scss\"]\n})\nexport class MainNavDumbComponent {\n  @Input()\n  menuItems: MenuItem[] = [];\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  ::ng-deep {\n    .p-menubar {\n      height: 65px;\n      border-radius: 0;\n      border-top: none;\n      border-left: none;\n      border-right: none;\n    }\n  }\n}\n\n.main-nav {\n  &__logo {\n    font-weight: bolder;\n    font-size: 1.5em;\n    margin: 0 10px 0 0;\n  }\n}\n",
                    "styleUrl": "./main-nav-dumb.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<p-menubar [model]=\"menuItems\">\n  <ng-template pTemplate=\"start\">\n    <h1 class=\"main-nav__logo\">REPOX</h1>\n  </ng-template>\n  <ng-template pTemplate=\"end\">\n    <p-button icon=\"pi pi-download\" [text]=\"true\" severity=\"secondary\"></p-button>\n    <p-button icon=\"pi pi-github\" [text]=\"true\" severity=\"secondary\"></p-button>\n    <p-button icon=\"pi pi-discord\" [text]=\"true\" severity=\"secondary\"></p-button>\n  </ng-template>\n</p-menubar>\n"
        },
        {
            "name": "MainNavSmartComponent",
            "id": "component-MainNavSmartComponent-a82a33d209d11c9214cb8c1bc2e06e62c4a7e31b162c44b9d5f21bf4cfaa8472eb774ae2120ffae359f32eb9cb7ddc9760d1f259f434ccc963d136fbcad20b87",
            "file": "src/app/shared/component/smart/component/main-nav-smart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "rw-main-nav-smart",
            "styleUrls": [],
            "styles": [],
            "template": "<rw-main-nav-dumb [menuItems]='menuItems'></rw-main-nav-dumb>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "menuItems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component} from \"@angular/core\";\n\nimport {MenuItem} from \"primeng/api\";\n\n@Component({\n  selector: \"rw-main-nav-smart\",\n  template: \"<rw-main-nav-dumb [menuItems]='menuItems'></rw-main-nav-dumb>\"\n})\nexport class MainNavSmartComponent {\n  menuItems: MenuItem[];\n\n  constructor() {\n    this.menuItems = [\n      {\n        label: \"Home\",\n        routerLink: \"/home\"\n      },\n      {\n        label: \"Docs\",\n        routerLink: \"docs\",\n        items: [\n          {\n            label: \"Getting started\",\n            routerLink: \"docs/getting-started\"\n          },\n          {\n            label: \"Features\",\n            routerLink: \"docs/features\"\n          },\n          {\n            label: \"Concepts\",\n            routerLink: \"docs/concepts\"\n          },\n          {\n            label: \"Extension\",\n            routerLink: \"docs/extension\"\n          },\n          {\n            label: \"Plugins\",\n            routerLink: \"docs/plugins\"\n          },\n          {\n            label: \"API\",\n            routerLink: \"docs/api\"\n          },\n          {\n            label: \"Changelog\",\n            routerLink: \"docs/changelog\"\n          }\n        ]\n      },\n      {\n        label: \"Blog\",\n        routerLink: \"/blog\"\n      },\n      {\n        label: \"Community\",\n        routerLink: \"/community\"\n      },\n      {\n        label: \"Plugins registry\",\n        routerLink: \"/plugins-registry\"\n      },\n      {\n        label: \"Sponsors\",\n        routerLink: \"/sponsors\"\n      }\n    ];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "extends": []
        },
        {
            "name": "ParagraphDumbComponent",
            "id": "component-ParagraphDumbComponent-d0d0c5b37dd3062d55bdd35ff029ea329696e0ac0e8b5f7ae7db24fb8dc286c76f6d9652fc0849e2ce3525f41e7f130db0048f6c9c84c20437cec99114c2eaa6",
            "file": "src/app/shared/component/dumb/paragraph-dumb/paragraph-dumb.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "rw-paragraph-dumb",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./paragraph-dumb.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "value",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input} from \"@angular/core\";\n\n@Component({\n  selector: \"rw-paragraph-dumb\",\n  templateUrl: \"./paragraph-dumb.component.html\",\n  styleUrl: \"./paragraph-dumb.component.scss\"\n})\nexport class ParagraphDumbComponent {\n  @Input()\n  value: string = \"\";\n}\n",
            "styleUrl": "./paragraph-dumb.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p class=\"paragraph\">{{ value }}</p>\n"
        },
        {
            "name": "ParagraphSmartComponent",
            "id": "component-ParagraphSmartComponent-6cdf3846bb52d05f78fce0b288b2cd794b0f3f494b980d0654a113a7be9441728be7fb69edfd1f8002ecc3e778a8a5e666eb9a4469d8a364189579828a647c51",
            "file": "src/app/shared/component/smart/component/paragraph-smart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "rw-paragraph-smart",
            "styleUrls": [],
            "styles": [],
            "template": "<rw-paragraph-dumb [value]='value'></rw-paragraph-dumb>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "value",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input} from \"@angular/core\";\n\n@Component({\n  selector: \"rw-paragraph-smart\",\n  template: \"<rw-paragraph-dumb [value]='value'></rw-paragraph-dumb>\"\n})\nexport class ParagraphSmartComponent {\n  @Input()\n  value: string = \"\";\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "PluginsComponent",
            "id": "component-PluginsComponent-63676852d590f6bdd768596efcf8c4bbe33719b37a31ceae4241b4581bcc9d96f359109c45bf9eafa08d0fae34a7759279bc84a0c7c9f24fe6219c030ad3a14b",
            "file": "src/app/core/docs/plugins/plugins.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "repox-website-plugins",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./plugins.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "\"plugins\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, OnInit} from '@angular/core';\n\nimport {AsideNavService} from \"../../../shared/component/aside-nav/aside-nav.service\";\n\n@Component({\n  selector: 'repox-website-plugins',\n  templateUrl: './plugins.component.html',\n  styleUrl: './plugins.component.scss'\n})\nexport class PluginsComponent implements OnInit {\n  title = \"plugins\";\n\n  constructor(private readonly asideNav: AsideNavService) {\n  }\n\n  ngOnInit() {\n    this.asideNav.asideNavOptions$.next([\n      {key: \"0-0\", label: \"Plugins Option 0\"},\n      {key: \"0-1\", label: \"Plugins Option 1\"},\n      {key: \"0-2\", label: \"Plugins Option 2\"},\n      {key: \"0-3\", label: \"Plugins Option 3\"},\n      {key: \"0-4\", label: \"Plugins Option 4\"}\n    ]);\n  }\n}\n",
            "styleUrl": "./plugins.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "asideNav",
                        "type": "AsideNavService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "asideNav",
                        "type": "AsideNavService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "{{title}}\n"
        },
        {
            "name": "PluginsRegistryComponent",
            "id": "component-PluginsRegistryComponent-eed47d5060b3debb9454eaf34ecd44cbb2bec69d2a4a72c497c9408ed1da7ce96501772426d076e9040de5f0638498a02d9356298d96ffd4ff796f715fdf3fbd",
            "file": "src/app/core/plugins-registry/plugins-registry.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "repox-website-plugins-registry",
            "styleUrls": [
                "./plugins-registry.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./plugins-registry.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "\"plugins-registry\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component} from \"@angular/core\";\n\n@Component({\n  selector: \"repox-website-plugins-registry\",\n  templateUrl: \"./plugins-registry.component.html\",\n  styleUrls: [\"./plugins-registry.component.scss\"]\n})\nexport class PluginsRegistryComponent {\n  title = \"plugins-registry\"\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./plugins-registry.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "{{title}}\n"
        },
        {
            "name": "RegenerateComponent",
            "id": "component-RegenerateComponent-1320b66c5e92505ac0663c571f92e665d2dc1a9bdc7aa34ff87de3dc877c428e9eec7d2fa287a2183be870765245b8ddfca5b59c4387271fb734b7b2e0b60a0e",
            "file": "src/app/core/docs/api/regenerate/component/regenerate.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "rw-regenerate",
            "styleUrls": [],
            "styles": [],
            "template": "<router-outlet></router-outlet>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component} from \"@angular/core\";\n\n@Component({\n  selector: \"rw-regenerate\",\n  template: \"<router-outlet></router-outlet>\"\n})\nexport class RegenerateComponent {\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "RegenerateIntroductionComponent",
            "id": "component-RegenerateIntroductionComponent-312cc0c16c39518bcd970ca3063836394fcca9f7047cec6eaa1b0a9fc0be3fd53fcf25dbded0f6f346dea15490c246a59cbcee24aa306148d64b81868420f2d8",
            "file": "src/app/core/docs/api/regenerate/component/regenerate-introduction.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "rw-regenerate-introduction",
            "styleUrls": [],
            "styles": [],
            "template": "<repox-website-docs-container [content]='content'></repox-website-docs-container>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "content",
                    "defaultValue": "{\n    sections: [\n      {\n        type: \"firstLevelHeader\",\n        value: \"Regenerate\",\n        link: \"generate\"\n      },\n      {\n        type: \"newline\"\n      },\n      {\n        type: \"paragraph\",\n        value: \"Workspace regeneration is a pivotal aspect of managing a monorepo project efficiently. In the \" +\n          \"context of Repox, workspace regeneration refers to the process of refreshing the workspace environment, \" +\n          \"ensuring that all dependencies, configurations, and project states are up to date. This process is \" +\n          \"essential for maintaining the integrity of the monorepo structure, enabling seamless collaboration \" +\n          \"and streamlined development workflows.\"\n      },\n      {\n        type: \"newline\"\n      },\n      {\n        type: \"paragraph\",\n        value: \"Within Repox, workspace regeneration serves as a fundamental mechanism for developers to synchronize \" +\n          \"their local environments with the latest changes in the monorepo. By initiating workspace regeneration, \" +\n          \"developers can resolve any discrepancies between their local setup and the central repository, thereby \" +\n          \"mitigating potential conflicts and ensuring consistency across the project. This proactive approach \" +\n          \"fosters a cohesive development ecosystem, empowering teams to focus on building and iterating upon \" +\n          \"features without disruptions.\"\n      },\n      {\n        type: \"newline\"\n      },\n      {\n        type: \"paragraph\",\n        value: \"Furthermore, workspace regeneration in Repox encompasses various functionalities tailored to the \" +\n          \"specific needs of monorepo management. From updating dependencies to validating project configurations, \" +\n          \"Repox streamlines the regeneration process, minimizing downtime and maximizing productivity. With robust \" +\n          \"tools and comprehensive documentation, Repox empowers developers to efficiently regenerate workspaces, \" +\n          \"fostering a collaborative and agile development environment conducive to innovation and growth.\"\n      }\n    ]\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DocsContentFormModel",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component} from \"@angular/core\";\n\nimport {DocsContentFormModel} from \"@shared\";\n\n@Component({\n  selector: \"rw-regenerate-introduction\",\n  template: \"<repox-website-docs-container [content]='content'></repox-website-docs-container>\"\n})\nexport class RegenerateIntroductionComponent {\n  content: DocsContentFormModel = {\n    sections: [\n      {\n        type: \"firstLevelHeader\",\n        value: \"Regenerate\",\n        link: \"generate\"\n      },\n      {\n        type: \"newline\"\n      },\n      {\n        type: \"paragraph\",\n        value: \"Workspace regeneration is a pivotal aspect of managing a monorepo project efficiently. In the \" +\n          \"context of Repox, workspace regeneration refers to the process of refreshing the workspace environment, \" +\n          \"ensuring that all dependencies, configurations, and project states are up to date. This process is \" +\n          \"essential for maintaining the integrity of the monorepo structure, enabling seamless collaboration \" +\n          \"and streamlined development workflows.\"\n      },\n      {\n        type: \"newline\"\n      },\n      {\n        type: \"paragraph\",\n        value: \"Within Repox, workspace regeneration serves as a fundamental mechanism for developers to synchronize \" +\n          \"their local environments with the latest changes in the monorepo. By initiating workspace regeneration, \" +\n          \"developers can resolve any discrepancies between their local setup and the central repository, thereby \" +\n          \"mitigating potential conflicts and ensuring consistency across the project. This proactive approach \" +\n          \"fosters a cohesive development ecosystem, empowering teams to focus on building and iterating upon \" +\n          \"features without disruptions.\"\n      },\n      {\n        type: \"newline\"\n      },\n      {\n        type: \"paragraph\",\n        value: \"Furthermore, workspace regeneration in Repox encompasses various functionalities tailored to the \" +\n          \"specific needs of monorepo management. From updating dependencies to validating project configurations, \" +\n          \"Repox streamlines the regeneration process, minimizing downtime and maximizing productivity. With robust \" +\n          \"tools and comprehensive documentation, Repox empowers developers to efficiently regenerate workspaces, \" +\n          \"fostering a collaborative and agile development environment conducive to innovation and growth.\"\n      }\n    ]\n  };\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "RegenerateWorkspaceComponent",
            "id": "component-RegenerateWorkspaceComponent-1703a98b76da71275ceeeb570f0aab9a29d93f9a12aacda515d015b4890407d5fba1e19c609254fdcaa3aaeca8fdc05df6e597cce702f62807314ffc18cc20b2",
            "file": "src/app/core/docs/api/regenerate/component/regenerate-workspace.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "rw-regenerate-workspace",
            "styleUrls": [],
            "styles": [],
            "template": "<repox-website-docs-container [content]='content'></repox-website-docs-container>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "content",
                    "defaultValue": "{\n    sections: [\n      {\n        type: \"firstLevelHeader\",\n        value: \"Regenerate Workspace\",\n        link: \"generate-workspace\"\n      },\n      {\n        type: \"newline\"\n      },\n      {\n        type: \"secondLevelHeader\",\n        value: \"Description\",\n        link: \"description\"\n      },\n      {\n        type: \"paragraph\",\n        value: \"The workspace regeneration section in Repox provides users with the capability to regenerate the \" +\n          \"entire monorepo workspace swiftly and efficiently. Through this feature, users can refresh their \" +\n          \"development environment, ensuring consistency and reliability across projects within the repository. \" +\n          \"Workspace regeneration facilitates the seamless integration of changes, dependencies, and configurations \" +\n          \"across all projects housed within the monorepo. It streamlines the process of updating dependencies or \" +\n          \"making structural changes, minimizing the risk of inconsistencies or conflicts. Ultimately, this section \" +\n          \"empowers users to maintain a cohesive and up-to-date development environment for their monorepo projects.\"\n      },\n      {\n        type: \"newline\"\n      },\n      {\n        type: \"secondLevelHeader\",\n        value: \"Syntax\",\n        link: \"syntax\"\n      },\n      {\n        type: \"command\",\n        value: \"repox regenerate workspace [options]\"\n      },\n      {\n        type: \"newline\"\n      },\n      {\n        type: \"secondLevelHeader\",\n        value: \"Program arguments\",\n        link: \"program-arguments\"\n      },\n      {\n        type: \"info\",\n        value: \"No arguments\"\n      },\n      {\n        type: \"newline\"\n      },\n      {\n        type: \"secondLevelHeader\",\n        value: \"Command arguments\",\n        link: \"command-arguments\"\n      },\n      {\n        type: \"arguments\",\n        value: [\n          {\n            argument: \"force\",\n            alias: \"f\",\n            description: \"Run in the force mode.\",\n            require: true,\n            value: \"boolean\"\n          }\n        ]\n      },\n      {\n        type: \"newline\"\n      },\n      {\n        type: \"secondLevelHeader\",\n        value: \"Example\",\n        link: \"example\"\n      },\n      {\n        type: \"command\",\n        value: \"repox regenerate workspace --force\"\n      }\n    ]\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DocsContentFormModel",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component} from \"@angular/core\";\n\nimport {DocsContentFormModel} from \"@shared\";\n\n@Component({\n  selector: \"rw-regenerate-workspace\",\n  template: \"<repox-website-docs-container [content]='content'></repox-website-docs-container>\"\n})\nexport class RegenerateWorkspaceComponent {\n  content: DocsContentFormModel = {\n    sections: [\n      {\n        type: \"firstLevelHeader\",\n        value: \"Regenerate Workspace\",\n        link: \"generate-workspace\"\n      },\n      {\n        type: \"newline\"\n      },\n      {\n        type: \"secondLevelHeader\",\n        value: \"Description\",\n        link: \"description\"\n      },\n      {\n        type: \"paragraph\",\n        value: \"The workspace regeneration section in Repox provides users with the capability to regenerate the \" +\n          \"entire monorepo workspace swiftly and efficiently. Through this feature, users can refresh their \" +\n          \"development environment, ensuring consistency and reliability across projects within the repository. \" +\n          \"Workspace regeneration facilitates the seamless integration of changes, dependencies, and configurations \" +\n          \"across all projects housed within the monorepo. It streamlines the process of updating dependencies or \" +\n          \"making structural changes, minimizing the risk of inconsistencies or conflicts. Ultimately, this section \" +\n          \"empowers users to maintain a cohesive and up-to-date development environment for their monorepo projects.\"\n      },\n      {\n        type: \"newline\"\n      },\n      {\n        type: \"secondLevelHeader\",\n        value: \"Syntax\",\n        link: \"syntax\"\n      },\n      {\n        type: \"command\",\n        value: \"repox regenerate workspace [options]\"\n      },\n      {\n        type: \"newline\"\n      },\n      {\n        type: \"secondLevelHeader\",\n        value: \"Program arguments\",\n        link: \"program-arguments\"\n      },\n      {\n        type: \"info\",\n        value: \"No arguments\"\n      },\n      {\n        type: \"newline\"\n      },\n      {\n        type: \"secondLevelHeader\",\n        value: \"Command arguments\",\n        link: \"command-arguments\"\n      },\n      {\n        type: \"arguments\",\n        value: [\n          {\n            argument: \"force\",\n            alias: \"f\",\n            description: \"Run in the force mode.\",\n            require: true,\n            value: \"boolean\"\n          }\n        ]\n      },\n      {\n        type: \"newline\"\n      },\n      {\n        type: \"secondLevelHeader\",\n        value: \"Example\",\n        link: \"example\"\n      },\n      {\n        type: \"command\",\n        value: \"repox regenerate workspace --force\"\n      }\n    ]\n  };\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "SponsorsComponent",
            "id": "component-SponsorsComponent-f4ab8121c2f3544b5b03784fa7f9040f22a187eb4934deb4fca0de4f725117981e6a6e3e00b02290d8de5bb80b194e29c40828b3b9b19e9e87466ee97559dbbe",
            "file": "src/app/core/sponsors/sponsors.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "repox-website-sponsors",
            "styleUrls": [
                "./sponsors.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sponsors.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "\"sponsors\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component} from \"@angular/core\";\n\n@Component({\n  selector: \"repox-website-sponsors\",\n  templateUrl: \"./sponsors.component.html\",\n  styleUrls: [\"./sponsors.component.scss\"]\n})\nexport class SponsorsComponent {\n  title = \"sponsors\"\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./sponsors.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "{{title}}\n"
        },
        {
            "name": "TerminalDumbComponent",
            "id": "component-TerminalDumbComponent-004a41c2198ef67fdf68346c859982fc7c70ca4aa2f2133b0d61598329e7a0ea15cd28042fe55d47718ffd047606e3cc55cc50d4b33be1976bac1ae3cc43c94e",
            "file": "src/app/shared/component/dumb/terminal-dumb/terminal-dumb.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "rw-terminal-dumb",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./terminal-dumb.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "content",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "event",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, EventEmitter, Input, Output} from \"@angular/core\";\n\n@Component({\n  selector: \"rw-terminal-dumb\",\n  templateUrl: \"./terminal-dumb.component.html\",\n  styleUrl: \"./terminal-dumb.component.scss\"\n})\nexport class TerminalDumbComponent {\n  @Input()\n  content: string = \"\";\n\n  @Output()\n  event = new EventEmitter();\n\n  onClick() {\n    this.event.emit();\n  }\n}\n",
            "styleUrl": "./terminal-dumb.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p-toast [breakpoints]=\"{'920px': {width: '90%', left: '5%'}}\"></p-toast>\n<p-panel header=\"Terminal\">\n  <p>{{ content }}</p>\n  <ng-template pTemplate=\"icons\">\n    <p-button icon=\"pi pi-copy\" severity=\"secondary\" [text]=\"true\" (click)=\"onClick()\"></p-button>\n  </ng-template>\n</p-panel>\n"
        },
        {
            "name": "TerminalSmartComponent",
            "id": "component-TerminalSmartComponent-64f9c842b8192b67e83e80e1986d44697d3a58bb96bd02b2364d043f3291c205e6432c74f2b56bedcba56dfdfa4dbf31f4268432814d3d7bfafa35235d200aed",
            "file": "src/app/shared/component/smart/component/terminal-smart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "rw-terminal-smart",
            "styleUrls": [],
            "styles": [],
            "template": "<rw-terminal-dumb [content]='content' (event)='copy()'></rw-terminal-dumb>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "content",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "copy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input} from \"@angular/core\";\nimport {MessageService} from \"primeng/api\";\n\n@Component({\n  selector: \"rw-terminal-smart\",\n  template: \"<rw-terminal-dumb [content]='content' (event)='copy()'></rw-terminal-dumb>\"\n})\nexport class TerminalSmartComponent {\n  @Input()\n  content: string = \"\";\n\n  constructor(private messageService: MessageService) {\n  }\n\n  copy() {\n    navigator.clipboard.writeText(this.content);\n    this.messageService.add({severity: \"info\", detail: \"Copied\"});\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": []
        }
    ],
    "modules": [
        {
            "name": "ApiModule",
            "id": "module-ApiModule-8abaa6884e14b595b034476b81d38a89a632290623c8808549c6b69f7011a39b1277ec97ff1d640dd09f79d94f88a403984257aaaf605d9b4b9439104946fe6c",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/core/docs/api/api.module.ts",
            "methods": [],
            "sourceCode": "import {NgModule} from \"@angular/core\";\nimport {RouterModule} from \"@angular/router\";\n\nimport {SharedModule} from \"../../../shared/shared.module\";\n\nimport {ApiComponent} from './api.component';\nimport {ApiHomeComponent} from './api-home/api-home.component';\nimport {GenerateModule} from \"./generate/generate.module\";\nimport {RegenerateModule} from \"./regenerate/regenerate.module\";\n\n@NgModule({\n  declarations: [\n    ApiComponent,\n    ApiHomeComponent\n  ],\n  imports: [\n    RouterModule,\n    SharedModule,\n    GenerateModule,\n    RegenerateModule\n  ]\n})\nexport class ApiModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ApiComponent"
                        },
                        {
                            "name": "ApiHomeComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "GenerateModule"
                        },
                        {
                            "name": "RegenerateModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppModule",
            "id": "module-AppModule-f3ad4352553c3a052ead80503f70992d46fbdd01a8f94dddff56cc3d88e7a35b70a86e63acea86b6336d2a9ae021f30f02488cd4fc7c9b0a662c45ff0b1c2adc",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import {NgModule} from '@angular/core';\nimport {RouterModule} from \"@angular/router\";\nimport {BrowserModule} from \"@angular/platform-browser\";\n\nimport {AppComponent} from './app.component';\n\nimport {CoreModule} from \"./core/core.module\";\nimport {SharedModule} from \"./shared/shared.module\";\nimport {AppRoutingModule} from \"./app-routing.module\";\nimport {SmartModule} from \"./shared/component/smart/smart.module\";\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule,\n    CoreModule,\n    SharedModule,\n    AppRoutingModule,\n    SmartModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "CoreModule"
                        },
                        {
                            "name": "SharedModule"
                        },
                        {
                            "name": "SmartModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-c32ba2168f934aaf8ecc1eddc7775e01582c58a670a693bd6a27ad74a13aad4e3f47440864968c1011e4b24020d8964bb933ed364c6ff8955344e6be9fd66dcb",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import {NgModule} from \"@angular/core\";\nimport {RouterModule, Routes} from \"@angular/router\";\n\nimport {HomeComponent} from \"./core/home/home.component\";\nimport {DocsComponent} from \"./core/docs/docs.component\";\nimport {BlogComponent} from \"./core/blog/blog.component\";\nimport {CommunityComponent} from \"./core/community/community.component\";\nimport {PluginsRegistryComponent} from \"./core/plugins-registry/plugins-registry.component\";\nimport {SponsorsComponent} from \"./core/sponsors/sponsors.component\";\nimport {DOCS_ROUTING} from \"./core/docs/docs-routing.module\";\n\nexport const routes: Routes = [\n  {path: \"\", redirectTo: \"home\", pathMatch: \"full\"},\n  {path: \"home\", component: HomeComponent},\n  {path: \"docs\", component: DocsComponent, children: DOCS_ROUTING},\n  {path: \"blog\", component: BlogComponent},\n  {path: \"community\", component: CommunityComponent},\n  {path: \"plugins-registry\", component: PluginsRegistryComponent},\n  {path: \"sponsors\", component: SponsorsComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CoreModule",
            "id": "module-CoreModule-8e2f9ec192e5a3528a0c890982ea825cba179f770315d5cb1bc365a35a0033949c5282197115ccd1b20bb5f8f44c95e62ba57324474bc353860731cb476646d5",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/core/core.module.ts",
            "methods": [],
            "sourceCode": "import {NgModule} from \"@angular/core\";\n\nimport {DocsModule} from \"./docs/docs.module\";\n\nimport {BlogComponent} from \"./blog/blog.component\";\nimport {CommunityComponent} from \"./community/community.component\";\nimport {HomeComponent} from \"./home/home.component\";\nimport {PluginsRegistryComponent} from \"./plugins-registry/plugins-registry.component\";\nimport {SponsorsComponent} from \"./sponsors/sponsors.component\";\nimport {ActivatedRoute} from \"@angular/router\";\n\n@NgModule({\n  declarations: [\n    BlogComponent,\n    CommunityComponent,\n    HomeComponent,\n    PluginsRegistryComponent,\n    SponsorsComponent\n  ],\n  imports: [\n    DocsModule\n  ]\n})\nexport class CoreModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "BlogComponent"
                        },
                        {
                            "name": "CommunityComponent"
                        },
                        {
                            "name": "HomeComponent"
                        },
                        {
                            "name": "PluginsRegistryComponent"
                        },
                        {
                            "name": "SponsorsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "DocsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DocsModule",
            "id": "module-DocsModule-d1dcc4a0fdd462a14e7bf72ee030117c084f65ca678bd60ecb59c705b368e1d4105f0361e5ff8a8c9f42beea58125071912e7859f804fa441dc9eaabcb0237e8",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/core/docs/docs.module.ts",
            "methods": [],
            "sourceCode": "import {NgModule} from \"@angular/core\";\nimport {RouterModule} from \"@angular/router\";\n\nimport {SharedModule} from \"../../shared/shared.module\";\n\nimport {DocsComponent} from \"./docs.component\";\nimport {ApiModule} from \"./api/api.module\";\nimport {ChangelogComponent} from './changelog/changelog.component';\nimport {ConceptsComponent} from './concepts/concepts.component';\nimport {ExtensionComponent} from './extension/extension.component';\nimport {FeaturesComponent} from './features/features.component';\nimport {GettingStartedComponent} from \"./getting-started/getting-started.component\";\nimport {PluginsComponent} from './plugins/plugins.component';\n\n@NgModule({\n  declarations: [\n    DocsComponent,\n    ChangelogComponent,\n    ConceptsComponent,\n    ExtensionComponent,\n    FeaturesComponent,\n    GettingStartedComponent,\n    PluginsComponent\n  ],\n  imports: [\n    RouterModule,\n    SharedModule,\n    ApiModule\n  ]\n})\nexport class DocsModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ChangelogComponent"
                        },
                        {
                            "name": "ConceptsComponent"
                        },
                        {
                            "name": "DocsComponent"
                        },
                        {
                            "name": "ExtensionComponent"
                        },
                        {
                            "name": "FeaturesComponent"
                        },
                        {
                            "name": "GettingStartedComponent"
                        },
                        {
                            "name": "PluginsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ApiModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DumbModule",
            "id": "module-DumbModule-d38333c8bab98ef11b0b91268bb12609ee972d487243af33a2295a3b1be8a9ae416dc38088b8ac252f6a404b31b9962b92d2d94f520a45f63c84e4123b2168b8",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/component/dumb/dumb.module.ts",
            "methods": [],
            "sourceCode": "import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\n\nimport {ArgumentsDumbComponent} from './arguments-dumb/arguments-dumb.component';\nimport {BreadcrumbDumbComponent} from \"./breadcrumb-dumb/breadcrumb-dumb.component\";\nimport {TerminalDumbComponent} from \"./terminal-dumb/terminal-dumb.component\";\nimport {HeaderDumbComponent} from \"./header-dumb/header-dumb.component\";\nimport {InfoMessageDumbComponent} from \"./info-message-dumb/info-message-dumb.component\";\nimport {ParagraphDumbComponent} from './paragraph-dumb/paragraph-dumb.component';\nimport {MainNavDumbComponent} from \"./main-nav-dumb/main-nav-dumb.component\";\n\nimport {TableModule} from \"primeng/table\";\nimport {BreadcrumbModule} from \"primeng/breadcrumb\";\nimport {MessagesModule} from \"primeng/messages\";\nimport {ToastModule} from \"primeng/toast\";\nimport {PanelModule} from \"primeng/panel\";\nimport {ButtonModule} from \"primeng/button\";\nimport {MenubarModule} from \"primeng/menubar\";\n\nimport {FontAwesomeModule} from \"@fortawesome/angular-fontawesome\";\n\n@NgModule({\n  declarations: [\n    ArgumentsDumbComponent,\n    BreadcrumbDumbComponent,\n    HeaderDumbComponent,\n    InfoMessageDumbComponent,\n    ParagraphDumbComponent,\n    TerminalDumbComponent,\n    MainNavDumbComponent\n  ],\n  imports: [\n    CommonModule,\n    BrowserAnimationsModule,\n    TableModule,\n    BreadcrumbModule,\n    MessagesModule,\n    ToastModule,\n    PanelModule,\n    ButtonModule,\n    MenubarModule,\n    FontAwesomeModule\n  ],\n  exports: [\n    ArgumentsDumbComponent,\n    BreadcrumbDumbComponent,\n    HeaderDumbComponent,\n    InfoMessageDumbComponent,\n    ParagraphDumbComponent,\n    TerminalDumbComponent,\n    MainNavDumbComponent\n  ]\n})\nexport class DumbModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ArgumentsDumbComponent"
                        },
                        {
                            "name": "BreadcrumbDumbComponent"
                        },
                        {
                            "name": "HeaderDumbComponent"
                        },
                        {
                            "name": "InfoMessageDumbComponent"
                        },
                        {
                            "name": "MainNavDumbComponent"
                        },
                        {
                            "name": "ParagraphDumbComponent"
                        },
                        {
                            "name": "TerminalDumbComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ArgumentsDumbComponent"
                        },
                        {
                            "name": "BreadcrumbDumbComponent"
                        },
                        {
                            "name": "HeaderDumbComponent"
                        },
                        {
                            "name": "InfoMessageDumbComponent"
                        },
                        {
                            "name": "MainNavDumbComponent"
                        },
                        {
                            "name": "ParagraphDumbComponent"
                        },
                        {
                            "name": "TerminalDumbComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FormModule",
            "id": "module-FormModule-6fe298c381d94ab205847c2c9c907b9073701b87addfa8b84a0a5f696d3ecd749eab6dddcf54a0729f2e2ffdcc0ec380c6168571a612ae100c5ac009013e2c78",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/component/form/form.module.ts",
            "methods": [],
            "sourceCode": "import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\n\nimport {SmartModule} from \"../smart/smart.module\";\n\nimport {DocsContentFormComponent} from \"./docs-content-form/docs-content-form.component\";\n\n@NgModule({\n  declarations: [\n    DocsContentFormComponent\n  ],\n  imports: [\n    CommonModule,\n    SmartModule\n  ],\n  exports: [\n    DocsContentFormComponent\n  ]\n})\nexport class FormModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "DocsContentFormComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SmartModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "DocsContentFormComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "GenerateModule",
            "id": "module-GenerateModule-a1e4587fdf5d51e8e71ab91a5706c7bdb81aa07811b44bf48652d91ccf57176adf036caa3b1e1af604dbeda05195fd2c84e3cd95fa696c21a778aba107b1cad9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/core/docs/api/generate/generate.module.ts",
            "methods": [],
            "sourceCode": "import {NgModule} from \"@angular/core\";\nimport {RouterModule} from \"@angular/router\";\n\nimport {SharedModule} from \"../../../../shared/shared.module\";\n\nimport {GenerateComponent} from \"./component/generate.component\";\nimport {GenerateIntroductionComponent} from \"./component/generate-introduction.component\";\nimport {GenerateWorkspaceComponent} from \"./component/generate-workspace.component\";\n\n@NgModule({\n  declarations: [\n    GenerateComponent,\n    GenerateIntroductionComponent,\n    GenerateWorkspaceComponent\n  ],\n  imports: [\n    RouterModule,\n    SharedModule\n  ]\n})\nexport class GenerateModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "GenerateComponent"
                        },
                        {
                            "name": "GenerateIntroductionComponent"
                        },
                        {
                            "name": "GenerateWorkspaceComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "RegenerateModule",
            "id": "module-RegenerateModule-c00b4e230d6b42816dade4784c5c4efbe37bd37fa217d36753ec4818de289c09e44109d9e17b7f30e732950a614ac26d359a6be0c53c780cff2a4bd22f1a4498",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/core/docs/api/regenerate/regenerate.module.ts",
            "methods": [],
            "sourceCode": "import {NgModule} from \"@angular/core\";\nimport {RouterModule} from \"@angular/router\";\n\nimport {SharedModule} from \"../../../../shared/shared.module\";\n\nimport {RegenerateComponent} from \"./component/regenerate.component\";\nimport {RegenerateIntroductionComponent} from \"./component/regenerate-introduction.component\";\nimport {RegenerateWorkspaceComponent} from \"./component/regenerate-workspace.component\";\n\n@NgModule({\n  declarations: [\n    RegenerateComponent,\n    RegenerateIntroductionComponent,\n    RegenerateWorkspaceComponent\n  ],\n  imports: [\n    RouterModule,\n    SharedModule\n  ]\n})\nexport class RegenerateModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "RegenerateComponent"
                        },
                        {
                            "name": "RegenerateIntroductionComponent"
                        },
                        {
                            "name": "RegenerateWorkspaceComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SharedModule",
            "id": "module-SharedModule-2f89da9b75d4e92851db4640f80f800b7b1de725bb34d9e6ff9bf9cc7b1589b52ca72ca9aa968273798dc70e76b8e6104f0102ce1c179fe6b491c6e66f22a9cb",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/shared.module.ts",
            "methods": [],
            "sourceCode": "import {NgModule} from \"@angular/core\";\n\nimport {SmartModule} from \"./component/smart/smart.module\";\n\nimport {TreeModule} from \"primeng/tree\";\nimport {ButtonModule} from \"primeng/button\";\n\nimport {AsideNavComponent} from \"./component/aside-nav/aside-nav.component\";\nimport {DocsContainerComponent} from \"./component/docs-container/docs-container.component\";\nimport {FormModule} from \"./component/form/form.module\";\n\n@NgModule({\n  declarations: [\n    AsideNavComponent,\n    DocsContainerComponent\n  ],\n  imports: [\n    FormModule,\n    SmartModule,\n    TreeModule,\n    ButtonModule\n  ],\n  exports: [\n    AsideNavComponent,\n    DocsContainerComponent\n  ]\n})\nexport class SharedModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AsideNavComponent"
                        },
                        {
                            "name": "DocsContainerComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "FormModule"
                        },
                        {
                            "name": "SmartModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AsideNavComponent"
                        },
                        {
                            "name": "DocsContainerComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SmartModule",
            "id": "module-SmartModule-39c472f7d9541aa453135ff065f1d02c0e887a1812269ed77cc477fa960aa286e636f304d4a2fb7c1460b33c20888dc14d42d0c9b7c48068ce035cbaa687f2c6",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/component/smart/smart.module.ts",
            "methods": [],
            "sourceCode": "import {NgModule} from \"@angular/core\";\n\nimport {DumbModule} from \"../dumb/dumb.module\";\n\nimport {BreadcrumbSmartComponent} from \"./component/breadcrumb-smart.component\";\nimport {TerminalSmartComponent} from \"./component/terminal-smart.component\";\nimport {HeaderSmartComponent} from \"./component/header-smart.component\";\nimport {InfoMessageSmartComponent} from \"./component/info-message-smart.component\";\nimport {ParagraphSmartComponent} from \"./component/paragraph-smart.component\";\nimport {ArgumentsSmartComponent} from \"./component/arguments-smart.component\";\nimport {MainNavSmartComponent} from \"./component/main-nav-smart.component\";\n\nimport {MessageService} from \"primeng/api\";\n\n@NgModule({\n  declarations: [\n    ArgumentsSmartComponent,\n    BreadcrumbSmartComponent,\n    HeaderSmartComponent,\n    InfoMessageSmartComponent,\n    ParagraphSmartComponent,\n    TerminalSmartComponent,\n    MainNavSmartComponent\n  ],\n  imports: [DumbModule],\n  exports: [\n    ArgumentsSmartComponent,\n    BreadcrumbSmartComponent,\n    HeaderSmartComponent,\n    InfoMessageSmartComponent,\n    ParagraphSmartComponent,\n    TerminalSmartComponent,\n    MainNavSmartComponent\n  ],\n  providers: [\n    MessageService\n  ]\n})\nexport class SmartModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ArgumentsSmartComponent"
                        },
                        {
                            "name": "BreadcrumbSmartComponent"
                        },
                        {
                            "name": "HeaderSmartComponent"
                        },
                        {
                            "name": "InfoMessageSmartComponent"
                        },
                        {
                            "name": "MainNavSmartComponent"
                        },
                        {
                            "name": "ParagraphSmartComponent"
                        },
                        {
                            "name": "TerminalSmartComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "DumbModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ArgumentsSmartComponent"
                        },
                        {
                            "name": "BreadcrumbSmartComponent"
                        },
                        {
                            "name": "HeaderSmartComponent"
                        },
                        {
                            "name": "InfoMessageSmartComponent"
                        },
                        {
                            "name": "MainNavSmartComponent"
                        },
                        {
                            "name": "ParagraphSmartComponent"
                        },
                        {
                            "name": "TerminalSmartComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/component/dumb/arguments-dumb/arguments-dumb.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    value: [\n      {\n        argument: \"name\",\n        alias: \"n\",\n        description: \"The name of the workspace.\",\n        require: true,\n        value: \"string\"\n      }\n    ]\n  }\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/component/dumb/breadcrumb-dumb/breadcrumb-dumb.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    home: {icon: \"pi pi-home\", routerLink: \"/\"},\n    items: [\n      {label: \"Link_1\", routerLink: \"/\"},\n      {label: \"Link_2\", routerLink: \"/\"},\n      {label: \"Link_3\", routerLink: \"/\"},\n      {label: \"Link_4\", routerLink: \"/\"},\n      {label: \"Link_5\", routerLink: \"/\"},\n      {label: \"Link_6\", routerLink: \"/\"}\n    ]\n  }\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/component/dumb/header-dumb/header-dumb.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    headerType: \"h1\",\n    headerValue: \"Title\",\n    headerLink: \"title\"\n  }\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/component/dumb/info-message-dumb/info-message-dumb.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    messages: [\n      { severity: \"info\", summary: \"Info\", detail: \"Message Content\" }\n    ]\n  }\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/component/dumb/main-nav-dumb/main-nav-dumb.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    menuItems: [\n        {\n            label: \"Test 1\",\n            routerLink: \"/test_1\"\n        },\n        {\n            label: \"Test 2\",\n            routerLink: \"/test_2\"\n        },\n        {\n            label: \"Test 3\",\n            routerLink: \"/test_3\"\n        },\n        {\n            label: \"Test 4\",\n            routerLink: \"/test_4\"\n        },\n        {\n            label: \"Test 5\",\n            routerLink: \"/test_5\"\n        }\n    ]\n  }\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/component/dumb/paragraph-dumb/paragraph-dumb.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    value: \" Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce efficitur nulla non diam vehicula tristique. Suspendisse pulvinar facilisis diam et pharetra. Phasellus nisl elit, eleifend sagittis sagittis at, congue vitae leo. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Donec tincidunt nibh turpis, non fringilla purus interdum eget. Phasellus dolor arcu, rhoncus quis vulputate aliquam, lobortis a mi. In malesuada velit ac massa pharetra, non fermentum justo pharetra. Suspendisse tincidunt consequat mauris vel mattis. Nam et massa pretium, sodales augue vel, egestas diam. Duis massa lectus, pulvinar non mauris ut, aliquam convallis nisi. Sed a ipsum tristique, faucibus ex in, suscipit tellus. Curabitur euismod magna lectus, eu accumsan ante fringilla eget. In hac habitasse platea dictumst. Quisque fringilla lobortis dolor eget blandit. Sed consectetur enim a ante interdum mattis. \"\n  }\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/component/dumb/terminal-dumb/terminal-dumb.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    content: \"repox program --arg1 -a command --arg2 -b\"\n  }\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/component/dumb/arguments-dumb/arguments-dumb.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ArgumentsDumbComponent>",
                "defaultValue": "{\n  title: \"Shared/Component/Dumb/ArgumentsDumbComponent\",\n  component: ArgumentsDumbComponent,\n  tags: [\"autodocs\"],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        TableModule\n      ]\n    })\n  ]\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/component/dumb/breadcrumb-dumb/breadcrumb-dumb.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<BreadcrumbDumbComponent>",
                "defaultValue": "{\n  title: \"Shared/Component/Dumb/BreadcrumbDumbComponent\",\n  component: BreadcrumbDumbComponent,\n  tags: [\"autodocs\"],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        BreadcrumbModule,\n        RouterTestingModule\n      ]\n    })\n  ]\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/component/dumb/header-dumb/header-dumb.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<HeaderDumbComponent>",
                "defaultValue": "{\n  title: \"Shared/Component/Dumb/HeaderDumbComponent\",\n  component: HeaderDumbComponent,\n  tags: [\"autodocs\"]\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/component/dumb/info-message-dumb/info-message-dumb.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<InfoMessageDumbComponent>",
                "defaultValue": "{\n  title: \"Shared/Component/Dumb/ErrorMessageDumbComponent\",\n  component: InfoMessageDumbComponent,\n  tags: [\"autodocs\"],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        BrowserAnimationsModule,\n        MessagesModule\n      ]\n    })\n  ]\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/component/dumb/main-nav-dumb/main-nav-dumb.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<MainNavDumbComponent>",
                "defaultValue": "{\n    title: \"Shared/Component/Dumb/MainNavDumbComponent\",\n    component: MainNavDumbComponent,\n    tags: [\"autodocs\"],\n    decorators: [\n      moduleMetadata({\n        imports: [\n            MenubarModule\n        ]\n      })\n    ]\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/component/dumb/paragraph-dumb/paragraph-dumb.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ParagraphDumbComponent>",
                "defaultValue": "{\n  title: \"Shared/Component/Dumb/ParagraphDumbComponent\",\n  component: ParagraphDumbComponent,\n  tags: [\"autodocs\"]\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/component/dumb/terminal-dumb/terminal-dumb.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TerminalDumbComponent>",
                "defaultValue": "{\n  title: \"Shared/Component/Dumb/TerminalDumbComponent\",\n  component: TerminalDumbComponent,\n  tags: [\"autodocs\"],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        BrowserAnimationsModule,\n        PanelModule,\n        ButtonModule,\n        ToastModule\n      ],\n      providers: [\n        MessageService\n      ]\n    })\n  ]\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": ".storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n  },\n}"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "DocsContentSectionModel",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "DocsContentFormFirstLevelHeaderModel | DocsContentFormSecondLevelHeaderModel | DocsContentFormInfoModel | DocsContentFormParagraphModel | DocsContentFormCommandModel | DocsContentFormArgumentsModel | DocsContentFormNewlineModel",
                "file": "src/app/shared/component/form/docs-content-form/docs-content-form.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ArgumentsDumbComponent>",
                "file": "src/app/shared/component/dumb/arguments-dumb/arguments-dumb.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BreadcrumbDumbComponent>",
                "file": "src/app/shared/component/dumb/breadcrumb-dumb/breadcrumb-dumb.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<HeaderDumbComponent>",
                "file": "src/app/shared/component/dumb/header-dumb/header-dumb.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<InfoMessageDumbComponent>",
                "file": "src/app/shared/component/dumb/info-message-dumb/info-message-dumb.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<MainNavDumbComponent>",
                "file": "src/app/shared/component/dumb/main-nav-dumb/main-nav-dumb.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ParagraphDumbComponent>",
                "file": "src/app/shared/component/dumb/paragraph-dumb/paragraph-dumb.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TerminalDumbComponent>",
                "file": "src/app/shared/component/dumb/terminal-dumb/terminal-dumb.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/app/shared/component/dumb/arguments-dumb/arguments-dumb.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/component/dumb/arguments-dumb/arguments-dumb.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    value: [\n      {\n        argument: \"name\",\n        alias: \"n\",\n        description: \"The name of the workspace.\",\n        require: true,\n        value: \"string\"\n      }\n    ]\n  }\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/component/dumb/arguments-dumb/arguments-dumb.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ArgumentsDumbComponent>",
                    "defaultValue": "{\n  title: \"Shared/Component/Dumb/ArgumentsDumbComponent\",\n  component: ArgumentsDumbComponent,\n  tags: [\"autodocs\"],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        TableModule\n      ]\n    })\n  ]\n}"
                }
            ],
            "src/app/shared/component/dumb/breadcrumb-dumb/breadcrumb-dumb.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/component/dumb/breadcrumb-dumb/breadcrumb-dumb.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    home: {icon: \"pi pi-home\", routerLink: \"/\"},\n    items: [\n      {label: \"Link_1\", routerLink: \"/\"},\n      {label: \"Link_2\", routerLink: \"/\"},\n      {label: \"Link_3\", routerLink: \"/\"},\n      {label: \"Link_4\", routerLink: \"/\"},\n      {label: \"Link_5\", routerLink: \"/\"},\n      {label: \"Link_6\", routerLink: \"/\"}\n    ]\n  }\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/component/dumb/breadcrumb-dumb/breadcrumb-dumb.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<BreadcrumbDumbComponent>",
                    "defaultValue": "{\n  title: \"Shared/Component/Dumb/BreadcrumbDumbComponent\",\n  component: BreadcrumbDumbComponent,\n  tags: [\"autodocs\"],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        BreadcrumbModule,\n        RouterTestingModule\n      ]\n    })\n  ]\n}"
                }
            ],
            "src/app/shared/component/dumb/header-dumb/header-dumb.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/component/dumb/header-dumb/header-dumb.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    headerType: \"h1\",\n    headerValue: \"Title\",\n    headerLink: \"title\"\n  }\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/component/dumb/header-dumb/header-dumb.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<HeaderDumbComponent>",
                    "defaultValue": "{\n  title: \"Shared/Component/Dumb/HeaderDumbComponent\",\n  component: HeaderDumbComponent,\n  tags: [\"autodocs\"]\n}"
                }
            ],
            "src/app/shared/component/dumb/info-message-dumb/info-message-dumb.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/component/dumb/info-message-dumb/info-message-dumb.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    messages: [\n      { severity: \"info\", summary: \"Info\", detail: \"Message Content\" }\n    ]\n  }\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/component/dumb/info-message-dumb/info-message-dumb.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<InfoMessageDumbComponent>",
                    "defaultValue": "{\n  title: \"Shared/Component/Dumb/ErrorMessageDumbComponent\",\n  component: InfoMessageDumbComponent,\n  tags: [\"autodocs\"],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        BrowserAnimationsModule,\n        MessagesModule\n      ]\n    })\n  ]\n}"
                }
            ],
            "src/app/shared/component/dumb/main-nav-dumb/main-nav-dumb.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/component/dumb/main-nav-dumb/main-nav-dumb.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    menuItems: [\n        {\n            label: \"Test 1\",\n            routerLink: \"/test_1\"\n        },\n        {\n            label: \"Test 2\",\n            routerLink: \"/test_2\"\n        },\n        {\n            label: \"Test 3\",\n            routerLink: \"/test_3\"\n        },\n        {\n            label: \"Test 4\",\n            routerLink: \"/test_4\"\n        },\n        {\n            label: \"Test 5\",\n            routerLink: \"/test_5\"\n        }\n    ]\n  }\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/component/dumb/main-nav-dumb/main-nav-dumb.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<MainNavDumbComponent>",
                    "defaultValue": "{\n    title: \"Shared/Component/Dumb/MainNavDumbComponent\",\n    component: MainNavDumbComponent,\n    tags: [\"autodocs\"],\n    decorators: [\n      moduleMetadata({\n        imports: [\n            MenubarModule\n        ]\n      })\n    ]\n}"
                }
            ],
            "src/app/shared/component/dumb/paragraph-dumb/paragraph-dumb.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/component/dumb/paragraph-dumb/paragraph-dumb.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    value: \" Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce efficitur nulla non diam vehicula tristique. Suspendisse pulvinar facilisis diam et pharetra. Phasellus nisl elit, eleifend sagittis sagittis at, congue vitae leo. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Donec tincidunt nibh turpis, non fringilla purus interdum eget. Phasellus dolor arcu, rhoncus quis vulputate aliquam, lobortis a mi. In malesuada velit ac massa pharetra, non fermentum justo pharetra. Suspendisse tincidunt consequat mauris vel mattis. Nam et massa pretium, sodales augue vel, egestas diam. Duis massa lectus, pulvinar non mauris ut, aliquam convallis nisi. Sed a ipsum tristique, faucibus ex in, suscipit tellus. Curabitur euismod magna lectus, eu accumsan ante fringilla eget. In hac habitasse platea dictumst. Quisque fringilla lobortis dolor eget blandit. Sed consectetur enim a ante interdum mattis. \"\n  }\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/component/dumb/paragraph-dumb/paragraph-dumb.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ParagraphDumbComponent>",
                    "defaultValue": "{\n  title: \"Shared/Component/Dumb/ParagraphDumbComponent\",\n  component: ParagraphDumbComponent,\n  tags: [\"autodocs\"]\n}"
                }
            ],
            "src/app/shared/component/dumb/terminal-dumb/terminal-dumb.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/component/dumb/terminal-dumb/terminal-dumb.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    content: \"repox program --arg1 -a command --arg2 -b\"\n  }\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/component/dumb/terminal-dumb/terminal-dumb.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TerminalDumbComponent>",
                    "defaultValue": "{\n  title: \"Shared/Component/Dumb/TerminalDumbComponent\",\n  component: TerminalDumbComponent,\n  tags: [\"autodocs\"],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        BrowserAnimationsModule,\n        PanelModule,\n        ButtonModule,\n        ToastModule\n      ],\n      providers: [\n        MessageService\n      ]\n    })\n  ]\n}"
                }
            ],
            ".storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": ".storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n  },\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/app/shared/component/form/docs-content-form/docs-content-form.model.ts": [
                {
                    "name": "DocsContentSectionModel",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "DocsContentFormFirstLevelHeaderModel | DocsContentFormSecondLevelHeaderModel | DocsContentFormInfoModel | DocsContentFormParagraphModel | DocsContentFormCommandModel | DocsContentFormArgumentsModel | DocsContentFormNewlineModel",
                    "file": "src/app/shared/component/form/docs-content-form/docs-content-form.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                }
            ],
            "src/app/shared/component/dumb/arguments-dumb/arguments-dumb.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ArgumentsDumbComponent>",
                    "file": "src/app/shared/component/dumb/arguments-dumb/arguments-dumb.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/shared/component/dumb/breadcrumb-dumb/breadcrumb-dumb.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BreadcrumbDumbComponent>",
                    "file": "src/app/shared/component/dumb/breadcrumb-dumb/breadcrumb-dumb.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/shared/component/dumb/header-dumb/header-dumb.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<HeaderDumbComponent>",
                    "file": "src/app/shared/component/dumb/header-dumb/header-dumb.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/shared/component/dumb/info-message-dumb/info-message-dumb.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<InfoMessageDumbComponent>",
                    "file": "src/app/shared/component/dumb/info-message-dumb/info-message-dumb.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/shared/component/dumb/main-nav-dumb/main-nav-dumb.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<MainNavDumbComponent>",
                    "file": "src/app/shared/component/dumb/main-nav-dumb/main-nav-dumb.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/shared/component/dumb/paragraph-dumb/paragraph-dumb.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ParagraphDumbComponent>",
                    "file": "src/app/shared/component/dumb/paragraph-dumb/paragraph-dumb.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/shared/component/dumb/terminal-dumb/terminal-dumb.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TerminalDumbComponent>",
                    "file": "src/app/shared/component/dumb/terminal-dumb/terminal-dumb.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "",
                        "redirectTo": "home",
                        "pathMatch": "full"
                    },
                    {
                        "path": "home",
                        "component": "HomeComponent"
                    },
                    {
                        "path": "docs",
                        "component": "DocsComponent",
                        "children": "DOCS_ROUTING"
                    },
                    {
                        "path": "blog",
                        "component": "BlogComponent"
                    },
                    {
                        "path": "community",
                        "component": "CommunityComponent"
                    },
                    {
                        "path": "plugins-registry",
                        "component": "PluginsRegistryComponent"
                    },
                    {
                        "path": "sponsors",
                        "component": "SponsorsComponent"
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": ".storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/blog/blog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BlogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/community/community.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CommunityComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/docs/api/api-home/api-home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ApiHomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/docs/api/api.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ApiComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/docs/api/generate/component/generate-introduction.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GenerateIntroductionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/docs/api/generate/component/generate-workspace.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GenerateWorkspaceComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/docs/api/generate/component/generate.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GenerateComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/docs/api/regenerate/component/regenerate-introduction.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RegenerateIntroductionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/docs/api/regenerate/component/regenerate-workspace.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RegenerateWorkspaceComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/docs/api/regenerate/component/regenerate.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RegenerateComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/docs/changelog/changelog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChangelogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/docs/concepts/concepts.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ConceptsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/docs/docs.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DocsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/docs/extension/extension.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ExtensionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/docs/features/features.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FeaturesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/docs/getting-started/getting-started.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GettingStartedComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/docs/plugins/plugins.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PluginsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/plugins-registry/plugins-registry.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PluginsRegistryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/sponsors/sponsors.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SponsorsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/component/aside-nav/aside-nav.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AsideNavComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/component/aside-nav/aside-nav.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AsideNavService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/component/docs-container/docs-container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DocsContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/component/dumb/arguments-dumb/arguments-dumb.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ArgumentsDumbComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/component/dumb/arguments-dumb/arguments-dumb.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/component/dumb/arguments-dumb/arguments-dumb.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/component/dumb/breadcrumb-dumb/breadcrumb-dumb.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BreadcrumbDumbComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/component/dumb/breadcrumb-dumb/breadcrumb-dumb.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/component/dumb/breadcrumb-dumb/breadcrumb-dumb.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/component/dumb/header-dumb/header-dumb.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderDumbComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/component/dumb/header-dumb/header-dumb.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/component/dumb/header-dumb/header-dumb.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/component/dumb/info-message-dumb/info-message-dumb.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InfoMessageDumbComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/component/dumb/info-message-dumb/info-message-dumb.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/component/dumb/info-message-dumb/info-message-dumb.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/component/dumb/main-nav-dumb/main-nav-dumb.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MainNavDumbComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/component/dumb/main-nav-dumb/main-nav-dumb.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/component/dumb/main-nav-dumb/main-nav-dumb.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/component/dumb/paragraph-dumb/paragraph-dumb.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ParagraphDumbComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/component/dumb/paragraph-dumb/paragraph-dumb.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/component/dumb/paragraph-dumb/paragraph-dumb.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/component/dumb/terminal-dumb/terminal-dumb.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TerminalDumbComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/component/dumb/terminal-dumb/terminal-dumb.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/component/dumb/terminal-dumb/terminal-dumb.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/component/form/docs-content-form/docs-content-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DocsContentFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/component/form/docs-content-form/docs-content-form.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DocsContentFormArgumentsModel",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/component/form/docs-content-form/docs-content-form.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DocsContentFormCommandModel",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/component/form/docs-content-form/docs-content-form.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DocsContentFormFirstLevelHeaderModel",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/component/form/docs-content-form/docs-content-form.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DocsContentFormInfoModel",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/component/form/docs-content-form/docs-content-form.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DocsContentFormModel",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/component/form/docs-content-form/docs-content-form.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DocsContentFormNewlineModel",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/component/form/docs-content-form/docs-content-form.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DocsContentFormParagraphModel",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/component/form/docs-content-form/docs-content-form.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DocsContentFormSecondLevelHeaderModel",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/component/smart/component/arguments-smart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ArgumentsSmartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/component/smart/component/breadcrumb-smart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BreadcrumbSmartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/component/smart/component/breadcrumb-smart.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BreadcrumbItem",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/component/smart/component/header-smart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderSmartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/component/smart/component/info-message-smart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InfoMessageSmartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/component/smart/component/main-nav-smart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MainNavSmartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/component/smart/component/paragraph-smart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ParagraphSmartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/component/smart/component/terminal-smart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TerminalSmartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            }
        ]
    }
}